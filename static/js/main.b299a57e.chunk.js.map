{"version":3,"sources":["utils/history.utils.js","utils/urls.utils.js","redux/user/user.types.js","utils/errors.utils.js","utils/validation.utils.js","utils/fetch.utils.js","redux/user/user.service.js","utils/jwt.utils.js","redux/user/user.actions.js","components/Header.component.jsx","components/DefaultFullPageLayout.component.jsx","pages/Homepage.page.jsx","hooks/useParsedFieldError.hook.js","components/FormInput.component.jsx","components/FormMessageDisplay.component.jsx","components/LoadingIndicator.jsx","components/PrimaryButton.component.jsx","components/Login.component.jsx","pages/Login.page.jsx","components/Register.component.jsx","pages/Register.page.js","redux/people/people.types.js","redux/people/people.service.js","redux/people/people.actions.js","hooks/useCrop.hook.js","components/FlexOverlay.component.jsx","components/ImageSelector.component.jsx","components/CreatePersonOverlay.component.jsx","components/PageTitleSection.component.jsx","components/LoadingIndicator.component.jsx","components/PeopleCard.component.jsx","components/PeopleList.component.jsx","components/PeopleCardOverview.component.jsx","pages/PeopleOverview.page.jsx","redux/boards/boards.types.js","redux/boards/boards.services.js","redux/boards/boards.actions.js","components/BoardCreateOverlay.component.jsx","components/BoardPreview.component.jsx","components/BoardsList.component.jsx","pages/BoardsOverview.page.jsx","components/BoardEditAddPeopleOverlay.component.jsx","components/ToggleCheckbox.component.jsx","components/BoardEditShare.component.jsx","components/LoadingOverlay.component.jsx","components/NotFoundNotice.component.jsx","components/PeopleCardEdit.component.jsx","pages/BoardEditPage.page.jsx","components/BoardDisplay.component.jsx","pages/PlayBoard.page.jsx","redux/PrivateRoute.js","App.js","reportWebVitals.js","redux/user/user.reducer.js","redux/people/reducers/person.reducer.js","redux/people/reducers/fetch.reducer.js","redux/people/reducers/create.reducer.js","redux/people/people.reducer.js","redux/boards/reducers/boards.main.reducer.js","redux/boards/reducers/boards.create.reducer.js","redux/boards/reducers/boards.edit.reducer.js","redux/boards/boards.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["browserHistory","createBrowserHistory","API_BASE_URL","process","USER_TYPES","LOGIN_USER_PENDING","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER_PENDING","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGOUT_USER","parseError","error","FormError","parseFormError","HTTPError","parseHTTPError","parseStandardError","ERROR_TYPES","getEmptyUniversalErrorObject","primaryMessage","type","status","data","errorObject","getPrimaryMessageFormHttpError","Array","isArray","length","String","console","message","Error","ERROR_KEYS","DEFAULT_ERROR_VALIDATORS","value","undefined","pass","validatorValue","errorMessage","dataKey","errorKey","test","validate","validators","errors","validatorKeys","Object","keys","i","fieldKey","fieldValidators","fieldErrors","validateField","isEmptyObject","obj","JSON","stringify","fieldValidatorKeys","validationKey","validationObject","getValidationObject","key","validator","combinedValidator","handleFetchResponse","response","ok","json","then","statusText","USER_BASE_URL","userServices","login","userLoginDto","a","email","exists","password","fetch","method","headers","body","register","userRegisterDto","is_email","max","name","min","JWT_TOKEN_KEY","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","getUserData","user","setAuthToken","localStorage","setItem","getAuthToken","getItem","removeAuthToken","removeItem","isExpired","parsedToken","Date","getTime","exp","userLoginStart","userLoginSuccess","payload","userLoginError","userActions","dispatch","userService","access_token","catch","perparedErrors","history","push","pathname","state","registeredUser","forceRefresh","userRegisterError","logout","redirectUrl","Header","useDispatch","useState","navOpen","setNavOpen","useSelector","store","className","to","onClick","Fragment","DefaultFullPageLayout","children","HomePage","useParsedFieldErrors","useMemo","parsedErrors","forEach","firstErrorMessage","FormInput","id","label","props","placeholder","htmlFor","MESSAGE_TYPES","FormMessageDisplay","messageClass","LoadingIndicator","PrimaryButton","isLoading","small","disabled","Login","loginPending","userLoginPending","loginError","useLocation","formMessage","setFormMessage","loginData","setLoginData","useHistory","refferer","referrer","useEffect","useLoginRedirect","onChange","e","target","preventDefault","LoginPage","Register","userRegisterPending","registerUserPending","registerUserError","parsedFieldErrors","registerData","setRegisterData","RegisterPage","PEOPLE_TYPES","PEOPLE_CREATE_START","PEOPLE_CREATE_SUCCESS","PEOPLE_CREATE_ERROR","PEOPLE_DELETE_START","PEOPLE_DELETE_SUCCESS","PEOPLE_DELETE_ERROR","PEOPLE_UPDATE_START","PEOPLE_UPDATE_SUCCESS","PEOPLE_UPDATE_ERROR","PEOPLE_FETCH_ALL_START","PEOPLE_FETCH_ALL_SUCCESS","PEOPLE_FETCH_ALL_ERROR","PEOPLE_FETCH_START","PEOPLE_FETCH_SUCCESS","PEOPLE_FETCH_ERROR","PEOPLE_BASE_URL","deletePerson","personId","PEOPLE_DELETE_URL","peopleService","fetchAllPeople","res","createPerson","createPersonDto","image","formData","FormData","append","peopleActions","fetchAllPeopleError","createPersonSuccess","person","createPersonError","createPersonStart","deletePersonSuccess","deletePersonError","useCrop","initialImage","img","setImg","imgFile","setImgFile","imgRef","useRef","unit","aspect","crop","setCrop","cropImage","width","height","getCroppedImg","current","croppedImage","previewUrl","window","URL","createObjectURL","newImgFile","File","fileName","canvas","document","createElement","pixelRatio","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","x","y","Promise","resolve","reject","toBlob","blob","onImageLoad","useCallback","crossOrigin","FlexOverlay","show","setShow","title","onClose","ImageSelector","src","onImageSelect","newCrop","onImageLoaded","CreatePersonOverlay","setShowOverlay","showOverlay","personName","setPersonName","statusMessage","people","create","prevPending","setPrevPending","createPersonErrorPending","createPersonPending","files","reader","FileReader","addEventListener","result","readAsDataURL","crossorigin","style","display","PageTitleSection","LoadingOverlay","PeopleCard","SortableElement","selected","selectable","cardRef","setImage","loadImage","url","image_url","Image","onload","ref","alt","defaultProps","hideOptions","DISPLAY_TYPES","PeopleList","RawPeopleList","distance","shouldCancelStart","indexOf","tagName","toLowerCase","getHelperDimensions","node","offsetWidth","offsetHeight","SortableContainer","Card","card","items","sortable","emptyMessage","displayType","classes","idx","isSelected","filter","index","PeopleCardOverview","PeopleOverview","peopleList","peopleByID","isLoadingPeople","fetchAllPeoplePending","searchTerm","setSearchTerm","displayedPeople","setDisplayedPeople","filterDisplayedPeopleBySearch","includes","BOARD_TYPES","BOARDS_CREATE_START","BOARDS_CREATE_SUCCESS","BOARDS_CREATE_ERROR","BOARDS_EDIT_START","BOARDS_EDIT_SUCCESS","BOARDS_EDIT_ERROR","BOARDS_DELETE_START","BOARDS_DELETE_SUCCESS","BOARDS_DELETE_ERROR","BOARDS_FETCH_ALL_START","BOARDS_FETCH_ALL_SUCCESS","BOARDS_FETCH_ALL_ERROR","BOARDS_FETCH_ONE_START","BOARDS_FETCH_ONE_SUCCESS","BOARDS_FETCH_ONE_ERROR","BOARDS_BASE_URL","createBoard","createBoardDto","boardServices","fetchAll","fetchOne","updateBoard","updateBoardDto","deleteBoard","boardActions","fetchAllBoards","BOARDS_TYPES","boardsServices","fetchAllBoardsError","fetchOneBoard","fetchOneBoardError","createBoardError","updateBoardError","deleteBaord","deleteBoardSuccess","deleteBoardError","BoardCreateOverlay","isCreateBoardPending","boards","createBoardPending","boardTitle","setBoardTitle","BoardPreview","board","backgroundImage","BoardsList","React","memo","BoardsOverviewPage","boardsByID","byId","boardsList","list","fetchBoardsPending","fetchAllPending","fetchBoardsError","fetchAllError","showBoardCreate","setShowBoardCreate","setBoards","boardsActions","boardId","searchedBoards","BoardEditAddPeopleOverlay","addPeople","setSerachTerm","peopleDisplayList","setPeopleDisplayList","selectedPeople","setSelectedPeople","peopleById","allPeople","searchResults","newSelectedPeople","selectedPeopleArray","peopleId","ToggleCheckbox","checked","BoardEditShare","showShareBoard","setShowShareBoard","sharing_enabled","share","setShare","setMessage","link","location","hostname","hideMessage","setTimeout","readOnly","navigator","clipboard","writeText","err","NotFoundNotice","PeopleOverviewCard","onRemoveClick","BaordEditPage","useParams","isEditPending","edit","editBoardPending","fetchOnePending","setTitle","displayPeople","setDisplayPeople","boardPeople","reduce","arr","boardPerson","displayPerson","onSortEnd","oldIndex","newIndex","newOrderedArray","array","fromIndex","toIndex","startIndex","endIndex","splice","item","reorderArray","axis","removePerson","newDisplayPeople","onRemoveCard","peopleToAdd","log","BoardDisplayCard","pos","onCardClick","setHeight","open","BoardDisplay","num","_","setBoard","newBoard","boardCard","cardIndex","PlayBoard","fetchBoardPending","setPeople","PrivateRoute","Component","component","isLoggedIn","auth","auth_token","isTokenExpired","useIsLoggedIn","render","App","path","HomepagePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initalUserState","initalState","userReducer","action","initialState","owner","deletePending","deleteError","updateError","updatePending","personReducer","fetchPersonPending","fetchPersonError","peopleReducer","next","createdPerson","createReducer","combineReducers","createPersonReducer","fetchOneError","boardsMainReducer","createdBoard","createBoardReducer","editBoardError","editedBoard","updateBoardReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","reducers","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b299a57e.chunk.js","sourcesContent":["import {createBrowserHistory} from \"history\"\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nexport default browserHistory","\r\n//export const API_BASE_URL = \"http://localhost:8080/api/\"\r\n\r\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\r\n\r\n","const USER_TYPES = {\r\n    LOGIN_USER_PENDING: \"LOGIN_USER_PENDING\",\r\n    LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\r\n    LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\r\n    REGISTER_USER_PENDING: \"REGISTER_USER_PENDING\",\r\n    REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\r\n    REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\",\r\n    LOGOUT_USER: \"LOGOUT_USER\",\r\n}\r\n\r\nexport default USER_TYPES","\r\n\r\n// check which type error is and handle it accordingly to get uniform error object in response\r\nexport const parseError = (error) => {\r\n    if(error instanceof FormError){\r\n        return parseFormError(error)\r\n    }else if(error instanceof HTTPError){\r\n        return parseHTTPError(error)\r\n    }\r\n    return parseStandardError(error);\r\n}\r\n\r\nconst ERROR_TYPES = {\r\n    HTTP_ERROR: \"HTTP_ERROR\",\r\n    FORM_ERROR: \"FORM_ERROR\",\r\n    STANDARD_ERROR: \"STANDARD_ERROR\",\r\n}\r\n\r\nconst getEmptyUniversalErrorObject = () => ({\r\n    primaryMessage: \"Something went wrong.\",\r\n    type: ERROR_TYPES.STANDARD_ERROR,\r\n    status: null,\r\n    data: {}\r\n})\r\n\r\nconst parseFormError = (error) => {\r\n    const errorObject = getEmptyUniversalErrorObject()\r\n    errorObject.primaryMessage = null;\r\n    errorObject.type = ERROR_TYPES.FORM_ERROR;\r\n    errorObject.status = 400;\r\n    errorObject.data = error.data;\r\n    return errorObject;\r\n}\r\n\r\n\r\nconst parseHTTPError = (error) => {\r\n    const errorObject = getEmptyUniversalErrorObject()\r\n    errorObject.type = ERROR_TYPES.HTTP_ERROR;\r\n    errorObject.status = error.status;\r\n    errorObject.data = error.data;\r\n    errorObject.primaryMessage = getPrimaryMessageFormHttpError(error)\r\n    return errorObject;\r\n}\r\n\r\nconst getPrimaryMessageFormHttpError = (errorObject) => {\r\n    if(Array.isArray(errorObject.data) && errorObject.data.length > 0){\r\n        errorObject.primaryMessage = errorObject.data[0]\r\n    }else if(typeof errorObject.data === 'string' || errorObject.data instanceof String){\r\n        return errorObject.data;\r\n    }\r\n\r\n    return \"Something went wrong. Try again.\"\r\n}\r\n\r\nconst parseStandardError = (error) => {\r\n    console.error(error)\r\n    return getEmptyUniversalErrorObject()\r\n}\r\n\r\n\r\nexport const displayErrorMessage = (error, field=null) => {\r\n\r\n}\r\n\r\n\r\nexport class HTTPError extends Error{\r\n    constructor(message, status, data){\r\n        super(message)\r\n        this.status = status;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport class FormError extends Error{\r\n    constructor(message, data){\r\n        super(message)\r\n        this.status = 400;\r\n        this.data = data;\r\n    }\r\n}","\r\nimport {FormError} from \"./errors.utils\"\r\n\r\nconst ERROR_KEYS = {\r\n    EXISTS: \"exists\",\r\n    MIN: \"min\",\r\n    MAX: \"max\",\r\n    IS_EMAIL: \"is_email\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DEFAULT_ERROR_VALIDATORS = {\r\n    [ERROR_KEYS.EXISTS]: {\r\n        value: undefined,\r\n        pass: (value, validatorValue) => {\r\n            return !!value && value !== \"\"\r\n        },\r\n        errorMessage: (value, validatorValue, dataKey, errorKey) => `${dataKey} cannot be empty!`, \r\n    },\r\n\r\n    [ERROR_KEYS.MIN]: {\r\n        value: 3,\r\n        pass: (value, validatorValue) => value.length >= validatorValue,\r\n        errorMessage: (value, validatorValue, dataKey, errorKey) => `${dataKey} has to be at least ${validatorValue} characters long!`, \r\n    },\r\n\r\n    [ERROR_KEYS.MAX]: {\r\n        value: 30,\r\n        pass: (value, validatorValue) => value.length <= validatorValue,\r\n        errorMessage: (value, validatorValue, dataKey, errorKey) => `${dataKey} has to be shorter than ${validatorValue} characters!`, \r\n    },\r\n    [ERROR_KEYS.IS_EMAIL]: {\r\n        value: undefined,\r\n        pass: (value, validatorValue) => {\r\n            const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            return re.test(value)\r\n        },\r\n        errorMessage: (value, validatorValue, dataKey, errorKey) => `'${value}' is not a valid email.`,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const validate = (data, validators) => {\r\n    const errors = {}\r\n\r\n    const validatorKeys = Object.keys(validators);\r\n    for(let i = 0; i < validatorKeys.length; i++){\r\n         \r\n        const fieldKey = validatorKeys[i];\r\n        const value = data[fieldKey];\r\n        const fieldValidators = validators[fieldKey]\r\n        if(value === undefined ) continue;\r\n        const fieldErrors = validateField(fieldKey, value, fieldValidators)\r\n  \r\n\r\n        if(!isEmptyObject(fieldErrors)){\r\n            errors[fieldKey] = fieldErrors\r\n        }\r\n    }\r\n\r\n\r\n    if(!isEmptyObject(errors)){\r\n        throw new FormError(\"validation error\", errors)\r\n    }\r\n}\r\n\r\n\r\nconst isEmptyObject = (obj) => JSON.stringify(obj) === JSON.stringify({})\r\n\r\n\r\nconst validateField = (dataKey, value, fieldValidators) => {\r\n    let fieldErrors = {}\r\n    const fieldValidatorKeys = Object.keys(fieldValidators);\r\n \r\n\r\n    for(let i = 0; i < fieldValidatorKeys.length; i++){\r\n\r\n  \r\n        const validationKey = fieldValidatorKeys[i];\r\n        const validationObject = getValidationObject(validationKey, fieldValidators) \r\n\r\n        if(!validationObject.pass(value, validationObject.value)){\r\n            fieldErrors = {\r\n                ...fieldErrors,\r\n                [validationKey]: validationObject.errorMessage(value, validationObject.value, dataKey, validationKey)\r\n            }\r\n        }\r\n    }\r\n\r\n    return fieldErrors\r\n}\r\n\r\nconst getValidationObject = (key, validators) => {\r\n    const validator = validators[key];\r\n\r\n    let combinedValidator = typeof validator === 'object' && validator !== null ? \r\n        validator : {value: validator}; \r\n\r\n    return{\r\n        ...DEFAULT_ERROR_VALIDATORS[key],\r\n        ...combinedValidator\r\n    }\r\n}\r\n\r\n","import {HTTPError} from \"./errors.utils\"\r\n\r\nexport const handleFetchResponse = (response) => {\r\n    if(response.ok){\r\n        return response.json();\r\n    }else{ \r\n        return response.json().then((json) => {\r\n            throw new HTTPError(`(Status: ${response.status}) ${response.statusText}`, response.status, json.message)\r\n        })\r\n    }\r\n}","import {API_BASE_URL} from \"../../utils/urls.utils\"\r\nimport { validate } from \"../../utils/validation.utils\"\r\nimport {handleFetchResponse} from \"../../utils/fetch.utils\"\r\n\r\nconst USER_BASE_URL = API_BASE_URL + \"users/\"\r\nconst LOGIN_URL = USER_BASE_URL + \"login/\"\r\n\r\n\r\n\r\nconst login = async (userLoginDto) => {\r\n\r\n    validate(userLoginDto, {\r\n        email: {\r\n            exists:true,\r\n        },\r\n        password: {\r\n            exists: true\r\n        }\r\n    })\r\n    \r\n\r\n    return fetch(LOGIN_URL, {\r\n        method: \"post\",\r\n        headers: {\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n        }, \r\n        body: JSON.stringify(userLoginDto)\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\n\r\nconst register = async (userRegisterDto) => {\r\n\r\n    validate(userRegisterDto, {\r\n        email: {\r\n            exists: true,\r\n            is_email: true,\r\n            max: 64,\r\n        },\r\n        name: {\r\n            exists: true,\r\n            max: 64,\r\n            min: 3,\r\n        },\r\n        password: {\r\n            exists: true,\r\n            min: 6\r\n        }\r\n    })\r\n    \r\n\r\n    return fetch(USER_BASE_URL, {\r\n        method: \"post\",\r\n        headers: {\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n        }, \r\n        body: JSON.stringify(userRegisterDto)\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst userServices = {\r\n    login,\r\n    register\r\n}\r\n\r\nexport default userServices \r\n","\r\n\r\nconst JWT_TOKEN_KEY = \"JWT_TOKEN\";\r\n\r\n\r\nexport const parseJwt = (token) => {\r\n    if(!token) return null;\r\n\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n};\r\n\r\nexport const getUserData = (token) => {\r\n    const parsedToken = parseJwt(token)\r\n    return parsedToken.user;\r\n}\r\n\r\nexport const setAuthToken = (token) => {\r\n    localStorage.setItem(JWT_TOKEN_KEY, token)\r\n}\r\n\r\nexport const getAuthToken = () => {\r\n    return localStorage.getItem(JWT_TOKEN_KEY)\r\n}\r\n\r\nexport const removeAuthToken = () => {\r\n    localStorage.removeItem(JWT_TOKEN_KEY);\r\n}\r\n\r\nexport const isExpired = (parsedToken) => {\r\n    if(parsedToken){\r\n        // cpompare exp date with current date\r\n        // 1630947375\r\n        // 1630938689769\r\n        return (new Date().getTime() / 1000) >= parsedToken.exp\r\n    }\r\n\r\n    return true;\r\n}","import USER_TYPES from \"./user.types\"\r\nimport userService from \"./user.service\"\r\nimport history from \"../../utils/history.utils\"\r\nimport {getUserData, setAuthToken, removeAuthToken} from \"../../utils/jwt.utils\"\r\nimport {parseError} from \"../../utils/errors.utils\"\r\n\r\nconst userLoginStart = () => ({\r\n    type: USER_TYPES.LOGIN_USER_PENDING,\r\n})\r\n\r\nexport const userLoginSuccess = (token, user) => ({\r\n    type: USER_TYPES.LOGIN_USER_SUCCESS,\r\n    payload: {\r\n        token,\r\n        user\r\n    }\r\n})\r\n\r\nconst userLoginError = (error) => ({\r\n    type: USER_TYPES.LOGIN_USER_ERROR,\r\n    payload: error\r\n})\r\n\r\nconst login = (userLoginDto, redirectUrl=\"/\") => (dispatch) => {\r\n    dispatch(userLoginStart())\r\n\r\n\r\n\r\n    userService.login(userLoginDto)\r\n        .then(json => {\r\n            const token = json.access_token;\r\n            const user = getUserData(token);\r\n            setAuthToken(token)\r\n            dispatch(userLoginSuccess(token, user))\r\n            \r\n        })\r\n        .catch(error => {\r\n            const perparedErrors = parseError(error)\r\n            dispatch(userLoginError(perparedErrors))\r\n        })\r\n}\r\n\r\n\r\nconst userRegisterStart = () => ({\r\n    type: USER_TYPES.REGISTER_USER_PENDING,\r\n})\r\n\r\nconst userRegisterSuccess = (user) => ({\r\n    type: USER_TYPES.REGISTER_USER_SUCCESS,\r\n    payload: user\r\n})\r\n\r\nconst userRegisterError = (error) => ({\r\n    type: USER_TYPES.REGISTER_USER_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\nconst register = (userRegisterDto) => (dispatch) => {\r\n    dispatch(userRegisterStart())\r\n\r\n    userService.register(userRegisterDto)\r\n        .then(json => {\r\n            dispatch(userRegisterSuccess(json))\r\n            history.push({\r\n                pathname: \"/login\",\r\n                state: {registeredUser: userRegisterDto},\r\n                forceRefresh: true,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            const perparedErrors = parseError(error)\r\n            dispatch(userRegisterError(perparedErrors))\r\n        })\r\n}\r\n\r\nconst logout = (redirectUrl) => {\r\n    removeAuthToken();\r\n\r\n    if(redirectUrl){\r\n        history.push(redirectUrl)\r\n    }\r\n\r\n    return {\r\n        type: USER_TYPES.LOGOUT_USER,\r\n    }\r\n}\r\n\r\n\r\nconst userActions =  {\r\n    login,\r\n    register,\r\n    logout\r\n}\r\n\r\nexport default userActions","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport userActions from \"../redux/user/user.actions\"\r\n\r\nimport \"../styles/components/Header.scss\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const [navOpen, setNavOpen] = useState(false)\r\n\r\n    const user = useSelector(store => store.user.user);\r\n\r\n    const onLogoutClick = () => {\r\n        dispatch(userActions.logout(\"/\"))\r\n    }\r\n\r\n    const toggleNav = () => setNavOpen(!navOpen)\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__content\">\r\n                <div className=\"header__title\">\r\n                    <Link to=\"/\">GuessThePerson</Link>\r\n                </div>\r\n\r\n                <nav className={`header__navigation ${navOpen ? \"header__navigation--open\" : \"\"}`}>\r\n\r\n\r\n                <button className=\"header__menu-btn\" onClick={toggleNav}>\r\n                    <div className=\"header__btn-bars\">\r\n                        <div className=\"header__btn-bar header__btn-bar--1\"></div>\r\n                        <div className=\"header__btn-bar header__btn-bar--2\"></div>\r\n                        <div className=\"header__btn-bar header__btn-bar--3\"></div>\r\n                    </div>\r\n                </button>\r\n\r\n                <div className=\"header__links\">\r\n                    {user ? \r\n                        <React.Fragment>\r\n                            <Link className=\"header__link\" to=\"/\">Home</Link>\r\n                            <Link className=\"header__link\" to=\"/people\">People</Link>\r\n                            <Link className=\"header__link\" to=\"/boards\">Boards</Link>\r\n                            <button className=\"header__link\" onClick={onLogoutClick}>Logout</button>\r\n                        </React.Fragment>\r\n                        :\r\n                        <React.Fragment>\r\n                            <Link className=\"header__link\" to=\"/login\">Login</Link>\r\n                            <Link className=\"header__link\" to=\"/register\">Register</Link>\r\n                        </React.Fragment>\r\n                    }\r\n                </div>\r\n                 \r\n                </nav>      \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header.component\"\r\nimport \"../styles/components/DefaultFullPageLayout.styles.scss\"\r\n\r\nconst DefaultFullPageLayout = ({children}) => (\r\n    <div className=\"full-page-layout\">\r\n        <Header />\r\n        <div className=\"full-page-layout__left\">\r\n        {children}\r\n        </div>\r\n        <div className=\"full-page-layout__right\">\r\n           \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default DefaultFullPageLayout;","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport DefaultFullPageLayout from \"../components/DefaultFullPageLayout.component\"\r\nimport { useSelector } from 'react-redux';\r\nimport \"../styles/pages/Homepage.styles.scss\";\r\n\r\n\r\nconst HomePage = () => {\r\n\r\n    const user = useSelector(store => store.user.user);\r\n\r\n    return user ? (\r\n        <DefaultFullPageLayout>\r\n                <div className=\"wholescreen-flex\">\r\n                <div className=\"wholescreen-flex__container hero-card\">\r\n                    <h1 className=\"hero-card__title\">Guess who?</h1>\r\n\r\n                    <div className=\"hero-card__section\">\r\n                        {user.name} use your boards and people sections to create a custom board to play.\r\n                    </div>\r\n\r\n                    <div className=\"hero-card__section hero-card__section--border\">\r\n                        <Link to=\"/people\"className=\"button button--center button--action\">People</Link>\r\n                    \r\n                        <Link to=\"/boards\" className=\"button button--center button--action\">Boards</Link>\r\n                    </div>\r\n            \r\n                </div>\r\n            </div>\r\n        </DefaultFullPageLayout>\r\n        ):(\r\n            <DefaultFullPageLayout>\r\n                <div className=\"wholescreen-flex\">\r\n                    <div className=\"wholescreen-flex__container hero-card\">\r\n                        <h1 className=\"hero-card__title\">Guess who?</h1>\r\n\r\n                        <div className=\"hero-card__section\">\r\n                            Create custom game boards and use them to play with friends.\r\n                        </div>\r\n\r\n                        <div className=\"hero-card__section hero-card__section--border\">\r\n                            <Link to=\"/login\"className=\"button button--center button--action\">Login</Link>\r\n                        \r\n                            <Link to=\"/register\" className=\"button button--center button--action\">Register</Link>\r\n                        </div>\r\n                \r\n                    </div>\r\n                </div>\r\n            </DefaultFullPageLayout>\r\n        )\r\n}\r\n\r\nexport default HomePage;","import {useMemo} from 'react'\r\n\r\n\r\nexport const useParsedFieldErrors = (errors) => {\r\n    const parsedErrors = useMemo(() => {\r\n\r\n        const parsedErrors = {}\r\n        if(errors && errors.data){\r\n\r\n            Object.keys(errors.data).forEach((fieldKey) => {\r\n                // get first error of field\r\n                const errorKey = Object.keys(errors.data[fieldKey])[0]\r\n                const firstErrorMessage = errors.data[fieldKey][errorKey];\r\n                parsedErrors[fieldKey] = firstErrorMessage\r\n            })\r\n        }\r\n        return parsedErrors;\r\n    }, [errors])\r\n\r\n    return parsedErrors\r\n}\r\n","import React from 'react'\r\nimport \"../styles/components/FormInput.scss\"\r\n\r\nconst FormInput = ({id, label, errorMessage, ...props}) => {\r\n    return (\r\n        <div className={`form-input ${errorMessage ? \"form-input--error\" : \"\"}`}>\r\n            <input className=\"form-input__input\" id={id} {...props} placeholder=\"\"/>\r\n            <label className=\"form-input__label\" htmlFor={id}>{label}</label>\r\n            <div className=\"form-input__error\">{errorMessage}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput;","import React, {useMemo} from 'react'\r\nimport \"../styles/components/FormMessageDisplay.styles.scss\";\r\n\r\nconst MESSAGE_TYPES = {\r\n    ERROR: \"error\",\r\n    WARNING: \"warning\",\r\n    SUCCESS: \"success\",\r\n    INFO: \"info\"\r\n}\r\n\r\nconst FormMessageDisplay = (props) => {\r\n\r\n    const {message, type} = props;\r\n\r\n    const messageClass = useMemo(() => {\r\n        switch(type){\r\n            case MESSAGE_TYPES.WARNING:\r\n                return \"form-message-display__warning\";\r\n            case MESSAGE_TYPES.SUCCESS:\r\n                return \"form-message-display__success\";\r\n            case MESSAGE_TYPES.INFO:\r\n                return \"form-message-display__info\";\r\n            default:\r\n                return \"form-message-display__error\"\r\n        }\r\n    }, [type])\r\n\r\n    return (\r\n        <div className={`form-message-display ${messageClass} ${!message && 'form-message-display__hidden'}`}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormMessageDisplay;","import React from 'react'\r\nimport \"../styles/components/LoadingIndicator.styles.scss\"\r\n\r\nconst LoadingIndicator = ({className}) => {\r\n    return (\r\n        <div className={`spinner ${className}`}>\r\n            <div className=\"spinner__rect spinner__rect--1\"></div>\r\n            <div className=\"spinner__rect spinner__rect--2\"></div>\r\n            <div className=\"spinner__rect spinner__rect--3\"></div>\r\n            <div className=\"spinner__rect spinner__rect--4\"></div>\r\n            <div className=\"spinner__rect spinner__rect--5\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingIndicator","import React from 'react'\r\n\r\nimport LoadingIndicator from './LoadingIndicator'\r\n\r\nconst PrimaryButton = ({children, className, isLoading, small, ...props}) => {\r\n    return (\r\n        <button className={`button button--action ${small ? 'button--small' : 'button--center'} ${className}`} disabled={isLoading} {...props}>\r\n            {isLoading && <LoadingIndicator  className=\"button__loading\"/>}\r\n           \r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PrimaryButton","import React, {useState, useEffect} from 'react'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {useLocation} from \"react-router-dom\"\r\n\r\nimport userActions from \"../redux/user/user.actions\"\r\nimport { useParsedFieldErrors } from '../hooks/useParsedFieldError.hook'\r\n\r\nimport FormInput from './FormInput.component'\r\nimport FormMessageDisplay from './FormMessageDisplay.component'\r\nimport PrimaryButton from './PrimaryButton.component'\r\n\r\n\r\n\r\nconst useLoginRedirect = () => {\r\n    const history = useHistory();\r\n    const user = useSelector(store => store.user.user);\r\n    const {state} = useLocation()\r\n    const refferer = state?.referrer ? state.referrer : null;\r\n\r\n    useEffect(() => {\r\n        // is logged in\r\n        if(user){\r\n            const redirectUrl = refferer ? refferer.pathname : \"/\";\r\n            history.push(redirectUrl);\r\n        }\r\n    },[user,history, refferer])\r\n}\r\n\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const loginPending = useSelector(store => store.user.userLoginPending)\r\n    const loginError = useSelector(store => store.user.userLoginError)\r\n    const parsedErrors = useParsedFieldErrors(loginError)\r\n    const {state} = useLocation();\r\n\r\n    const [formMessage, setFormMessage] = useState({\r\n        message: state?.registeredUser ? `${state.registeredUser.name} successfully created. You can now login.` : null,\r\n        type: \"success\",\r\n    })\r\n\r\n    \r\n    const [loginData, setLoginData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n\r\n    useLoginRedirect();\r\n\r\n    useEffect(() => {\r\n        if(loginError && loginError.primaryMessage){\r\n            setFormMessage({\r\n                message: loginError.primaryMessage,\r\n                type: \"error\"\r\n            })\r\n        }\r\n    },[loginError])\r\n\r\n    // on change handler for login form\r\n    const onChange = (e) => {\r\n        setLoginData({\r\n            ...loginData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // on login submit\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userActions.login(loginData))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"wholescreen-flex\">\r\n            <div className=\"wholescreen-flex__container hero-card\">\r\n                <h1 className=\"hero-card__title\">Login</h1>\r\n\r\n                <form className=\"hero-card__section\">\r\n                    \r\n                    <FormMessageDisplay message={formMessage.message} type={formMessage.type}/>\r\n\r\n                    <FormInput label=\"Email\" id=\"email\" onChange={onChange} name=\"email\" value={loginData.email} errorMessage={parsedErrors?.email} />\r\n                    <FormInput label=\"Password\" id=\"password\" type=\"password\"  onChange={onChange} value={loginData.password} name=\"password\"  errorMessage={parsedErrors?.password}/>\r\n                    \r\n                    <PrimaryButton onClick={onSubmit} isLoading={loginPending}>Login</PrimaryButton>\r\n                </form>\r\n                <div className=\"hero-card__section hero-card__section--border\">\r\n                    Don't have an account yet? <Link to={\"/register\"}>Register</Link> now to create custom who am I boards with your friends.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport Login from '../components/Login.component'\r\nimport DefaultFullPageLayout from '../components/DefaultFullPageLayout.component'\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\n    return (\r\n        <DefaultFullPageLayout>\r\n            <Login />\r\n        </DefaultFullPageLayout>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport FormInput from './FormInput.component'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport userActions from \"../redux/user/user.actions\"\r\nimport PrimaryButton from \"./PrimaryButton.component\"\r\nimport { useParsedFieldErrors } from '../hooks/useParsedFieldError.hook'\r\nimport FormMessageDisplay from \"./FormMessageDisplay.component\"\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const dispatch = useDispatch()\r\n    const userRegisterPending = useSelector(store => store.user.registerUserPending)\r\n    const userRegisterError = useSelector(store => store.user.registerUserError)\r\n    const parsedFieldErrors = useParsedFieldErrors(userRegisterError)\r\n\r\n    const [formMessage, setFormMessage] = useState({\r\n        message: null,\r\n        type: \"error\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(userRegisterError && userRegisterError.primaryMessage){\r\n            setFormMessage({\r\n                message: userRegisterError.primaryMessage,\r\n                type: \"error\"\r\n            })\r\n        }\r\n    }, [userRegisterError])\r\n\r\n\r\n\r\n    const [registerData, setRegisterData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const onChange = (e) => {\r\n        setRegisterData({\r\n            ...registerData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setFormMessage({message: null, type: \"error\"})\r\n        dispatch(userActions.register(registerData))\r\n    }\r\n\r\n    \r\n    return (\r\n\r\n        <div className=\"wholescreen-flex\">\r\n            <div className=\"wholescreen-flex__container hero-card\">\r\n                <h1 className=\"hero-card__title\">Register</h1>\r\n\r\n                <form className=\"hero-card__section\">\r\n              \r\n                    <FormMessageDisplay message={formMessage.message} type={formMessage.type} />\r\n                    <FormInput label=\"Email\" id=\"email\" name=\"email\" value={registerData.email} onChange={onChange} errorMessage={parsedFieldErrors?.email}/>\r\n                    <FormInput label=\"Username\" id=\"name\" name=\"name\"  value={registerData.name} onChange={onChange}  errorMessage={parsedFieldErrors?.name}/>\r\n                    <FormInput label=\"Password\" id=\"password\" name=\"password\" type=\"password\" value={registerData.password} onChange={onChange} errorMessage={parsedFieldErrors?.password}/>\r\n                    <PrimaryButton onClick={onSubmit} isLoading={userRegisterPending}>Register</PrimaryButton>\r\n                </form>\r\n                <div className=\"hero-card__section hero-card__section--border\">\r\n                    Already have an account? <Link to=\"/login\">Login</Link> to create a board.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React from 'react'\r\nimport Register from '../components/Register.component'\r\nimport DefaultFullPageLayout from '../components/DefaultFullPageLayout.component'\r\n\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <DefaultFullPageLayout>\r\n            <Register />\r\n        </DefaultFullPageLayout>\r\n    )\r\n}\r\n\r\nexport default RegisterPage","const PEOPLE_TYPES = {\r\n    PEOPLE_CREATE_START: \"PEOPLE_CREATE_START\",\r\n    PEOPLE_CREATE_SUCCESS: \"PEOPLE_CREATE_SUCCESS\",\r\n    PEOPLE_CREATE_ERROR: \"PEOPLE_CREATE_ERROR\",\r\n\r\n    PEOPLE_DELETE_START: \"PEOPLE_DELETE_START\",\r\n    PEOPLE_DELETE_SUCCESS: \"PEOPLE_DELETE_SUCCESS\",\r\n    PEOPLE_DELETE_ERROR: \"PEOPLE_DELETE_ERROR\",\r\n\r\n    PEOPLE_UPDATE_START: \"PEOPLE_UPDATE_START\",\r\n    PEOPLE_UPDATE_SUCCESS: \"PEOPLE_UPDATE_SUCCESS\",\r\n    PEOPLE_UPDATE_ERROR: \"PEOPLE_UPDATE_ERROR\",\r\n\r\n    PEOPLE_FETCH_ALL_START: \"PEOPLE_FETCH_ALL_START\",\r\n    PEOPLE_FETCH_ALL_SUCCESS: \"PEOPLE_FETCH_ALL_SUCCESS\",\r\n    PEOPLE_FETCH_ALL_ERROR: \"PEOPLE_FETCH_ALL_ERROR\",\r\n\r\n    PEOPLE_FETCH_START: \"PEOPLE_FETCH_START\",\r\n    PEOPLE_FETCH_SUCCESS: \"PEOPLE_FETCH_SUCCESS\",\r\n    PEOPLE_FETCH_ERROR: \"PEOPLE_FETCH_ERROR\",\r\n}\r\n\r\nexport default PEOPLE_TYPES;","import {getAuthToken} from \"../../utils/jwt.utils\"\r\nimport {API_BASE_URL} from \"../../utils/urls.utils\"\r\nimport {validate} from \"../../utils/validation.utils\"\r\nimport {handleFetchResponse} from \"../../utils/fetch.utils\"\r\nconst PEOPLE_BASE_URL = API_BASE_URL + \"people/\"\r\n\r\n\r\n\r\nconst deletePerson = async (personId) => {\r\n    const PEOPLE_DELETE_URL = PEOPLE_BASE_URL + `${personId}`\r\n\r\n    return fetch(PEOPLE_DELETE_URL, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst createPerson = async (createPersonDto) => {\r\n\r\n    validate(createPersonDto, {\r\n        name: {\r\n            exists: true,\r\n            max: 20,\r\n        },\r\n        image: {\r\n            exists: true\r\n        }\r\n    })\r\n\r\n    const formData = new FormData()\r\n    formData.append('name', createPersonDto.name)\r\n    formData.append('image', createPersonDto.image)\r\n\r\n    return fetch(PEOPLE_BASE_URL, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst fetchAllPeople = () =>{\r\n    return fetch(PEOPLE_BASE_URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer '+getAuthToken(),\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n        }\r\n    }).then(res => res.json())\r\n}\r\n\r\nconst peopleService = {\r\n    fetchAllPeople,\r\n    createPerson,\r\n    deletePerson\r\n}\r\n\r\nexport default peopleService","import PEOPLE_TYPES from \"./people.types\";\r\nimport peopleService from \"./people.service\"\r\nimport {parseError} from \"../../utils/errors.utils\"\r\n\r\n\r\n\r\nconst deletePerson = (personId) => dispatch => {\r\n    const deletePersonStart = () => ({\r\n        type: PEOPLE_TYPES.PEOPLE_DELETE_START,\r\n        payload: {id: personId}\r\n    })\r\n\r\n    const deletePersonSuccess = (personId) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_DELETE_SUCCESS,\r\n        payload: {id: personId}\r\n    })\r\n\r\n    const deletePersonError = (id, error) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_DELETE_ERROR,\r\n        payload: {id, error}\r\n    })  \r\n\r\n    dispatch(deletePersonStart())\r\n\r\n    peopleService.deletePerson(personId)\r\n    .then(json => {\r\n        dispatch(deletePersonSuccess(json.id))\r\n    })\r\n    .catch(error => {\r\n        dispatch(deletePersonError(personId, error))\r\n    })\r\n}\r\n\r\nconst createPerson = (createPersonDto) => async (dispatch) => {\r\n    const createPersonStart = () => ({\r\n        type: PEOPLE_TYPES.PEOPLE_CREATE_START\r\n    })\r\n\r\n    const createPersonSuccess = (person) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_CREATE_SUCCESS,\r\n        payload: person\r\n    })\r\n\r\n    const createPersonError = (error) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_CREATE_ERROR,\r\n        payload: error\r\n    })  \r\n\r\n    dispatch(createPersonStart())\r\n\r\n    peopleService.createPerson(createPersonDto).then(json => {\r\n        dispatch(createPersonSuccess(json))\r\n    })\r\n    .catch(error => {\r\n        const perparedErrors = parseError(error)\r\n        dispatch(createPersonError(perparedErrors))\r\n    })\r\n\r\n\r\n}\r\n\r\nconst fetchAllPeople = () => (dispatch) => {\r\n    const fetchAllPeopleStart = () => ({\r\n        type: PEOPLE_TYPES.PEOPLE_FETCH_ALL_START\r\n    })\r\n\r\n    const fetchAllPeopleSuccess = (people) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_FETCH_ALL_SUCCESS,\r\n        payload: people\r\n    })\r\n\r\n    const fetchAllPeopleError = (error) => ({\r\n        type: PEOPLE_TYPES.PEOPLE_FETCH_ALL_ERROR,\r\n        payload: error\r\n    })\r\n\r\n\r\n    dispatch(fetchAllPeopleStart())\r\n\r\n    peopleService.fetchAllPeople()\r\n        .then(json => {\r\n            dispatch(fetchAllPeopleSuccess(json))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchAllPeopleError(error))\r\n        })\r\n}\r\n\r\n\r\nconst peopleActions = {\r\n    fetchAllPeople,\r\n    createPerson,\r\n    deletePerson\r\n}\r\n\r\nexport default peopleActions\r\n   ","import {useState, useRef, useCallback} from \"react\"\r\n\r\nconst useCrop = (initialImage=null) => {\r\n    const [img, setImg] = useState(initialImage)\r\n    const [imgFile, setImgFile] = useState(null)\r\n    const imgRef = useRef(null)\r\n\r\n\r\n\r\n    const [crop, setCrop] = useState({\r\n        unit: \"%\",\r\n        aspect: 3 / 4,\r\n    });\r\n\r\n\r\n    const cropImage = async () => {\r\n        if( imgRef && crop.width && crop.height) {\r\n          const croppedImage = await getCroppedImg(\r\n            imgRef.current,\r\n            crop,\r\n            'newFile.jpeg'\r\n          );\r\n    \r\n          const previewUrl = window.URL.createObjectURL(croppedImage);\r\n          setImg(previewUrl)\r\n \r\n           const newImgFile = new File([croppedImage], imgFile.name)\r\n           \r\n           setImgFile(newImgFile)\r\n        }\r\n    }\r\n\r\n    const getCroppedImg = (image, crop, fileName) => {\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const pixelRatio = window.devicePixelRatio;\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        const ctx = canvas.getContext('2d');\r\n    \r\n        canvas.width = crop.width * pixelRatio * scaleX;\r\n        canvas.height = crop.height * pixelRatio * scaleY;\r\n    \r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = 'high';\r\n    \r\n \r\n        ctx.drawImage(\r\n          image,\r\n          crop.x * scaleX,\r\n          crop.y * scaleY,\r\n          crop.width * scaleX,\r\n          crop.height * scaleY,\r\n          0,\r\n          0,\r\n          crop.width * scaleX,\r\n          crop.height * scaleY\r\n        );\r\n    \r\n\r\n    \r\n        return new Promise((resolve, reject) => {\r\n          canvas.toBlob(\r\n            (blob) => {\r\n              if (!blob) {\r\n                //reject(new Error('Canvas is empty'));\r\n                console.error('Canvas is empty');\r\n                return;\r\n              }\r\n              \r\n              resolve(blob);\r\n            },\r\n            'image/jpeg',\r\n            1\r\n          );\r\n        });\r\n      }\r\n\r\n    const onImageLoad = useCallback((img) => {\r\n        imgRef.current = img;\r\n        imgRef.current.crossOrigin = \"anonymous\"\r\n    }, []);\r\n\r\n\r\n    return {crop,img,setImg, setCrop, onImageLoad, cropImage, imgFile,setImgFile}\r\n}\r\n\r\nexport default useCrop","import React from 'react'\r\nimport {FaTimes} from \"react-icons/fa\"\r\nimport \"../styles/components/FlexOverlay.scss\"\r\n\r\nconst FlexOverlay = ({show, setShow, className, children, title, onClose}) => {\r\n\r\n    const onCloseClick = () => {\r\n        setShow(false)\r\n        if(onClose) onClose()\r\n    }\r\n\r\n    return (\r\n        <div className={`overlay ${!show && 'overlay--hidden'}`} >\r\n                <div className={`overlay__container ${className ? className : ''}`}>\r\n\r\n                    <div className=\"overlay__title\">\r\n                        {title}\r\n\r\n                        <div className=\"overlay__close\" onClick={onCloseClick}>\r\n                            <FaTimes />\r\n                        </div>\r\n                    </div>\r\n                \r\n\r\n                    <div className=\"overlay__content\">\r\n                        {children}  \r\n                    </div>\r\n                \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FlexOverlay","\r\nimport React from 'react'\r\nimport ReactCrop from 'react-image-crop';\r\nimport \"../styles/components/ImageSelector.scss\";\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\nconst ImageSelector = ({src, crop, setCrop, onImageLoad, onImageSelect, errorMessage}) => {\r\n    return (\r\n        <div className={`image-selector ${errorMessage && 'image-selector--error'}`}>\r\n           {src ? <ReactCrop \r\n            src={src} \r\n            crop={crop} \r\n            onChange={newCrop => setCrop(newCrop)} \r\n            onImageLoaded={onImageLoad}\r\n            />\r\n        :\r\n            <label className=\"image-selector__input-label\">\r\n                Select Image\r\n                <input className=\"image-selector__input\" type=\"file\" onChange={onImageSelect}/>\r\n            </label>\r\n        }\r\n        <div className=\"form-input__error\">{errorMessage}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSelector","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport peopleActions from \"../redux/people/people.actions\"\r\nimport { useParsedFieldErrors } from '../hooks/useParsedFieldError.hook';\r\nimport useCrop from \"../hooks/useCrop.hook\"\r\n\r\nimport FlexOverlay from \"./FlexOverlay.component\"\r\nimport FormMessageDisplay from './FormMessageDisplay.component';\r\nimport FormInput from \"./FormInput.component\"\r\nimport ImageSelector from './ImageSelector.component';\r\nimport PrimaryButton from \"./PrimaryButton.component\"\r\n\r\nimport \"../styles/components/EditPersonOverlay.scss\";\r\n\r\nconst CreatePersonOverlay = ({setShowOverlay, showOverlay}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [personName, setPersonName] = useState(\"\")\r\n    const {crop, setCrop, onImageLoad, cropImage, img, setImg, setImgFile, imgFile} = useCrop()\r\n\r\n    const [statusMessage, setStatusMessage] = useState({\r\n        message: \"\",\r\n        type: \"error\"\r\n    })\r\n    const createPersonError = useSelector(store => store.people.create.createPersonError)\r\n\r\n    const [prevPending, setPrevPending] = useState(false)\r\n    const createPersonErrorPending = useSelector(store => store.people.create.createPersonPending)\r\n    const parsedFieldErrors = useParsedFieldErrors(createPersonError)\r\n\r\n\r\n    useEffect(() => {\r\n        if(createPersonErrorPending){\r\n            setPrevPending(true)\r\n        }else if(!createPersonErrorPending && prevPending){\r\n            setPrevPending(false)\r\n            setPersonName(\"\")\r\n            setImg(null)\r\n            setImgFile(null)\r\n        }\r\n    }, [createPersonErrorPending])\r\n\r\n\r\n\r\n\r\n    const onSaveClick = (e) => {\r\n        // save or update \r\n        e.preventDefault()\r\n\r\n        // create\r\n        const createPersonDto = {\r\n            name: personName,\r\n            image: imgFile\r\n        }\r\n  \r\n        dispatch(peopleActions.createPerson(createPersonDto))\r\n    \r\n    }\r\n\r\n\r\n\r\n    const onChange = (e) => {\r\n        setPersonName(e.target.value)\r\n    }\r\n\r\n    const onImageSelect = (e) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => setImg(reader.result));\r\n            setImgFile(e.target.files[0])\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onCropClick = (e) => {\r\n        e.preventDefault();\r\n        cropImage();\r\n    }\r\n\r\n    const onOverlayClose = () => {\r\n        setImgFile(null)\r\n        setImg(null)\r\n        setPersonName(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <FlexOverlay setShow={setShowOverlay} show={showOverlay} className=\"person-overlay\" title=\"Create New Person\" onClose={onOverlayClose}>\r\n       \r\n                <form>\r\n                    <FormMessageDisplay message={statusMessage.message} type={statusMessage.type} />\r\n                    <FormInput label=\"name\" id=\"person-name\" name=\"name\" value={personName} onChange={onChange} errorMessage={parsedFieldErrors.name}/>\r\n                    <ImageSelector \r\n                        src={img}\r\n                        crop={crop}\r\n                        setCrop={setCrop}\r\n                        onImageLoad={onImageLoad}\r\n                        crossorigin=\"anonymous\"\r\n                        onImageSelect={onImageSelect}\r\n                        errorMessage={parsedFieldErrors.image}\r\n                    />\r\n                    \r\n\r\n                    <div className=\"person-overlay__buttons\">\r\n                        <PrimaryButton onClick={onSaveClick} isLoading={false} small>Save</PrimaryButton>\r\n                        <PrimaryButton onClick={onCropClick} isLoading={false} small>Crop</PrimaryButton>\r\n                        <label className=\"button button--action button--small\" onClick={onImageSelect}>\r\n                            ChangeImage\r\n                            <input type=\"file\" style={{display: \"none\"}} onChange={onImageSelect}/>\r\n                        </label>\r\n                    </div>\r\n                </form>\r\n\r\n        </FlexOverlay>\r\n    )\r\n}\r\n\r\nexport default CreatePersonOverlay;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport \"../styles/components/PageTitleSection.styles.scss\"\r\n\r\nconst PageTitleSection = ({title, children}) => {\r\n\r\n    const user = useSelector(store => store.user.user)\r\n\r\n    return (\r\n        <div className=\"page-section page-title-section\">\r\n            <h1 className=\"page-title-section__title\">{user.name} | {title}</h1>\r\n            <div className=\"page-title-section__body\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageTitleSection","import React from 'react'\r\n\r\nimport \"../styles/components/LoadingIndicator.scss\"\r\n\r\nconst LoadingIndicator = () =>  (\r\n    <div className=\"loading-spinner\">\r\n        <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n    </div>\r\n)\r\nconst LoadingOverlay = ({show}) => (\r\n    <div className={`loading-incidator ${show && 'loading-incidator--show'}`}>\r\n        <LoadingIndicator />\r\n    </div>\r\n)\r\n\r\nexport default LoadingOverlay ","import React, {useState, useRef, useEffect} from 'react'\r\nimport { SortableElement} from \"react-sortable-hoc\"\r\n\r\nimport {API_BASE_URL} from \"../utils/urls.utils\"\r\n\r\nimport \"../styles/components/PeopleCard.scss\"\r\n\r\n\r\nconst PeopleCard = SortableElement(({children, person, selected, selectable, onClick}) => {\r\n    const cardRef = useRef()\r\n    const [image, setImage] = useState(null)\r\n\r\n\r\n    const loadImage = async () => {\r\n        if(person){\r\n            const url = API_BASE_URL + person.image_url;\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                setImage(image)\r\n            }\r\n            image.src = url\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadImage();\r\n    }, [person])\r\n\r\n\r\n    const onPersonClick = (e) => {\r\n        onClick(person)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`people-card ${selected ? 'people-card--selected' : ''} ${selectable ? 'people-card--selectable' : ''}`} ref={cardRef} onClick={onPersonClick}>\r\n               \r\n            <div className=\"people-card__flex-container\">\r\n                <div className=\"people-card__img-container\" >\r\n                  <img src={image ? image.src : null} alt={`card: ${person.name}`}/>\r\n                </div>\r\n            </div>\r\n            \r\n       \r\n            <div className=\"people-card__name\" title={person.name}>\r\n                {person.name}\r\n            </div>\r\n\r\n            {children}\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nPeopleCard.defaultProps = {\r\n    person: null,\r\n    selected: false,\r\n    hideOptions: false,\r\n    onClick: () => {}\r\n}\r\n\r\nexport default PeopleCard\r\n","import React, {useMemo} from 'react'\r\nimport {SortableContainer} from \"react-sortable-hoc\"\r\n\r\nimport FormMessageDisplay from \"./FormMessageDisplay.component\"\r\nimport LoadingOverlay from './LoadingIndicator.component'\r\nimport PeopleCard from './PeopleCard.component'\r\n\r\nimport \"../styles/components/PeopleList.scss\"\r\n\r\nexport const DISPLAY_TYPES = {\r\n    STANDARD: \"standard\",\r\n    AUTO_FIT: \"auto_fit\"\r\n}\r\n\r\nconst PeopleList = (props) => {\r\n    const shouldCancelStart = (e) => {\r\n        // Cancel sorting if the event target is an `input`, `textarea`, `select` or `option`\r\n        if (['input', 'textarea', 'select', 'option'].indexOf(e.target.tagName.toLowerCase()) !== -1) {\r\n            return true; // Return true to cancel sorting\r\n        }\r\n    }\r\n\r\n    const getHelperDimensions = ({node}) =>({\r\n        width: node.offsetWidth,\r\n        height: node.offsetHeight,\r\n    })\r\n\r\n    return (\r\n        <RawPeopleList {...props} distance={1}  shouldCancelStart={shouldCancelStart} getHelperDimensions={getHelperDimensions}/>\r\n    )\r\n}\r\n\r\nexport const RawPeopleList = SortableContainer(({id, card: Card, items, sortable, hideOptions, selected, onClick, isLoading, emptyMessage, displayType}) => {\r\n\r\n    const classes = useMemo(() => {\r\n        switch(displayType){\r\n            case DISPLAY_TYPES.AUTO_FIT:\r\n                return \"people-list people-list--auto-fit\"\r\n            default:\r\n                return \"people-list\"\r\n        }\r\n    }, [displayType])\r\n\r\n    return (\r\n        <div className={classes}>\r\n         \r\n            <LoadingOverlay show={isLoading}/>\r\n\r\n            {items.length === 0 && <FormMessageDisplay message={emptyMessage || \"There are currently no people to display\"} type=\"info\" />}\r\n           \r\n           <div className=\"people-list__items\">     \r\n                {items.map((person, idx) => {               \r\n                    const isSelected = selected.filter(id => person.id === id).length === 1\r\n                    return (\r\n                        <Card \r\n                            person={person} \r\n                            key={id + person.id} \r\n                            index={idx} \r\n                            disabled={!sortable} \r\n                            selected={isSelected} \r\n                            hideOptions={hideOptions} \r\n                            onClick={onClick}\r\n                            selectable={!!selected}\r\n                            />\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nPeopleList.defaultProps = {\r\n    people: [],\r\n    sortable: false,\r\n    selected: [],\r\n    hideOptions: true,\r\n    onClick: () => {},\r\n    card: PeopleCard,\r\n    displayType: DISPLAY_TYPES.STANDARD\r\n}\r\n\r\nexport default PeopleList","import React from 'react'\r\nimport {FaTrash} from \"react-icons/fa\"\r\nimport peopleActions from \"../redux/people/people.actions\"\r\nimport { useDispatch } from 'react-redux'\r\nimport PeopleCard from './PeopleCard.component'\r\n\r\nconst PeopleCardOverview = ({person, ...props}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onDeleteClick = (e) => {\r\n        dispatch(peopleActions.deletePerson(person.id))\r\n    }\r\n\r\n    return (\r\n        <PeopleCard {...props} person={person}>\r\n            <div className=\"people-card__overlay\" onClick={onDeleteClick}>\r\n                <div><FaTrash /> Delete</div>\r\n            </div>\r\n        </PeopleCard>\r\n    )\r\n}\r\n\r\nexport default PeopleCardOverview","import React, {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {FaPlus} from \"react-icons/fa\"\r\n\r\nimport peopleActions from \"../redux/people/people.actions\"\r\n\r\nimport CreatePersonOverlay from '../components/CreatePersonOverlay.component'\r\nimport FormInput from '../components/FormInput.component'\r\nimport Header from \"../components/Header.component\"\r\nimport PageTitleSection from \"../components/PageTitleSection.component\"\r\nimport PeopleList from '../components/PeopleList.component'\r\nimport PeopleCardOverview from '../components/PeopleCardOverview.component'\r\n\r\nimport \"../styles/pages/PeopleOverviewpage.styles.scss\"\r\n\r\n/*\r\n\r\n    CreatePersonOverlay\r\n*/\r\n\r\nconst PeopleOverview = () => {\r\n    const dispatch = useDispatch()\r\n    const peopleList = useSelector(store => store.people.people.peopleList)\r\n    const peopleByID= useSelector(store =>store.people.people.peopleByID)\r\n    const isLoadingPeople = useSelector(store => store.people.people.fetchAllPeoplePending)\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [displayedPeople, setDisplayedPeople] = useState([])\r\n\r\n    const [showOverlay, setShowOverlay] = useState(false)\r\n\r\n\r\n    // load user people on load\r\n    useEffect(() => {\r\n        dispatch(peopleActions.fetchAllPeople())\r\n    }, [dispatch])\r\n\r\n\r\n    // react to people update & convert to display ready array\r\n    useEffect(() => {\r\n        if(peopleByID){\r\n            const people = peopleList.map(id => peopleByID[id])\r\n            setDisplayedPeople(people)\r\n        }\r\n        setShowOverlay(false)\r\n    }, [peopleByID, peopleList])\r\n\r\n    const onCreateClick = () => {\r\n        setShowOverlay(true)\r\n    }\r\n\r\n    const onSearch = (e) => {\r\n        setSearchTerm(e.target.value)\r\n        filterDisplayedPeopleBySearch(e.target.value)\r\n    }\r\n\r\n    const filterDisplayedPeopleBySearch = (searchTerm) => {\r\n        const people = peopleList.map(id => {\r\n            const person = peopleByID[id]\r\n            return person.name.toLowerCase().includes(searchTerm.toLowerCase()) ? person : null; \r\n        }).filter(person => person !== null)\r\n  \r\n        setDisplayedPeople(people)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"page page--fullscreen page--flex\" >\r\n            <Header />\r\n        \r\n            <div className=\"page__content page__content--container\">\r\n        \r\n                <PageTitleSection title=\"People Overview\">\r\n                    <div className=\"people-overview-header__controlls\">\r\n                        <div className=\"people-overview-header__input\"><FormInput label=\"search\" value={searchTerm} onChange={onSearch}/></div>\r\n                        <div className=\"people-overview-header__button\"> <button className=\"button button--action\" onClick={onCreateClick}><FaPlus />New Person</button></div>\r\n                    </div>\r\n                </PageTitleSection>\r\n              \r\n               \r\n                <div className=\"page-section\">\r\n                    <PeopleList \r\n                        items={displayedPeople}  \r\n                        hideOptions={false} \r\n                        isLoading={isLoadingPeople} \r\n                        emptyMessage={searchTerm ? `There are no people with the name '${searchTerm}'` : null}\r\n                        card={PeopleCardOverview}\r\n                        />\r\n                </div>\r\n                \r\n                <CreatePersonOverlay setShowOverlay={setShowOverlay} showOverlay={showOverlay}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeopleOverview","const BOARD_TYPES = {\r\n    BOARDS_CREATE_START: \"BOARDS_CREATE_START\",\r\n    BOARDS_CREATE_SUCCESS: \"BOARDS_CREATE_SUCCESS\",\r\n    BOARDS_CREATE_ERROR: \"BOARDS_CREATE_ERROR\",\r\n\r\n    BOARDS_EDIT_START: \"BOARDS_EDIT_START\",\r\n    BOARDS_EDIT_SUCCESS: \"BOARDS_EDIT_SUCCESS\",\r\n    BOARDS_EDIT_ERROR: \"BOARDS_EDIT_ERROR\",\r\n\r\n    BOARDS_DELETE_START: \"BOARDS_DELETE_START\",\r\n    BOARDS_DELETE_SUCCESS: \"BOARDS_DELETE_SUCCESS\",\r\n    BOARDS_DELETE_ERROR: \"BOARDS_DELETE_ERROR\",\r\n\r\n    BOARDS_FETCH_ALL_START: \"BOARDS_FETCH_ALL_START\",\r\n    BOARDS_FETCH_ALL_SUCCESS: \"BOARDS_FETCH_ALL_SUCCESS\",\r\n    BOARDS_FETCH_ALL_ERROR: \"BOARDS_FETCH_ALL_ERROR\",\r\n\r\n    BOARDS_FETCH_ONE_START: \"BOARDS_FETCH_ONE_START\",\r\n    BOARDS_FETCH_ONE_SUCCESS: \"BOARDS_FETCH_ONE_SUCCESS\",\r\n    BOARDS_FETCH_ONE_ERROR: \"BOARDS_FETCH_ONE_ERROR\",\r\n}\r\n\r\nexport default BOARD_TYPES","import {getAuthToken} from \"../../utils/jwt.utils\"\r\nimport {API_BASE_URL} from \"../../utils/urls.utils\"\r\nimport {validate} from \"../../utils/validation.utils\"\r\nimport {handleFetchResponse} from \"../../utils/fetch.utils\"\r\n\r\n\r\nconst BOARDS_BASE_URL = API_BASE_URL + \"boards/\"\r\n\r\nconst createBoard = async (createBoardDto) => {\r\n\r\n    validate(createBoardDto,{\r\n        title: {exists: true}\r\n    })\r\n\r\n    return fetch(BOARDS_BASE_URL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(createBoardDto),\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst fetchAll = () => {\r\n    return fetch(BOARDS_BASE_URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n        }\r\n    }).then(res => res.json())\r\n}\r\n\r\nconst fetchOne = async (id) => {\r\n    const URL = BOARDS_BASE_URL + id\r\n    return fetch(URL, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst updateBoard = async (id,updateBoardDto) => {\r\n    \r\n    validate(updateBoardDto,{\r\n        title: {exists: true}\r\n    })\r\n\r\n    const URL = BOARDS_BASE_URL + id;\r\n    return fetch(URL, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updateBoardDto),\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n            'Accept': 'application/json', \r\n            'Content-Type': 'application/json',\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\n\r\nconst deleteBoard = async (id) => {\r\n    const URL = BOARDS_BASE_URL + id;\r\n    return fetch(URL, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + getAuthToken(),\r\n        }\r\n    }).then(handleFetchResponse)\r\n}\r\n\r\nconst boardServices = {\r\n    fetchAll,\r\n    fetchOne,\r\n    createBoard,\r\n    updateBoard,\r\n    deleteBoard\r\n}\r\n\r\nexport default boardServices","import BOARDS_TYPES from \"./boards.types\"\r\nimport boardsServices from \"./boards.services\"\r\nimport {parseError} from \"../../utils/errors.utils\"\r\nimport history from \"../../utils/history.utils\"\r\n\r\nconst createBoard = (createBoardDto) => dispatch => {\r\n    const createBoardStart = () => ({\r\n        type: BOARDS_TYPES.BOARDS_CREATE_START\r\n    })\r\n\r\n    const createBoardSuccess = (boards) => ({\r\n        type: BOARDS_TYPES.BOARDS_CREATE_SUCCESS,\r\n        payload: boards\r\n    })\r\n\r\n    const createBoardError = (errors) => ({\r\n        type: BOARDS_TYPES.BOARDS_CREATE_ERROR,\r\n        payload: errors,\r\n    })\r\n\r\n    dispatch(createBoardStart())\r\n\r\n\r\n    boardsServices.createBoard(createBoardDto)\r\n        .then(json => {\r\n            dispatch(createBoardSuccess(json))\r\n\r\n            history.push({\r\n                pathname: `/boards/${json.id}/edit`\r\n            })\r\n        })\r\n        .catch(errors => {\r\n            const parsedErrors = parseError(errors)\r\n            dispatch(createBoardError(parsedErrors))\r\n        })   \r\n}\r\n\r\n// fetches all user boards\r\nconst fetchAllBoards = () => dispatch => {\r\n    const fetchAllBoardsStart = () => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ALL_START\r\n    })\r\n\r\n    const fetchAllBoardsSuccess = (boards) => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ALL_SUCCESS,\r\n        payload: boards\r\n    })\r\n\r\n    const fetchAllBoardsError = (errors) => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ALL_ERROR,\r\n        payload: errors,\r\n    })\r\n\r\n    dispatch(fetchAllBoardsStart())\r\n\r\n    boardsServices.fetchAll()\r\n        .then(json => {\r\n            dispatch(fetchAllBoardsSuccess(json))\r\n        })\r\n        .catch(errors => {\r\n            dispatch(fetchAllBoardsError(errors))\r\n        })   \r\n}\r\n\r\nconst fetchOneBoard = (id) => dispatch => {\r\n\r\n    const fetchOneBoardStart = () => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ONE_START\r\n    })\r\n\r\n    const fetchOneBoardSuccess = (board) => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ONE_SUCCESS,\r\n        payload: board\r\n    })\r\n\r\n    const fetchOneBoardError = (errors) => ({\r\n        type: BOARDS_TYPES.BOARDS_FETCH_ONE_ERROR,\r\n        payload: errors,\r\n    })\r\n\r\n    dispatch(fetchOneBoardStart())\r\n\r\n    boardsServices.fetchOne(id)\r\n        .then(json => {\r\n            dispatch(fetchOneBoardSuccess(json))\r\n        })\r\n        .catch(errors => {\r\n            const parsedErrors = parseError(errors)\r\n            dispatch(fetchOneBoardError(parsedErrors))\r\n        })   \r\n}\r\n\r\n\r\nconst updateBoard = (id, updateBoardDto) => dispatch => {\r\n\r\n    const updateBoardStart = () => ({\r\n        type: BOARDS_TYPES.BOARDS_EDIT_START\r\n    })\r\n\r\n    const updateBoardSuccess = (board) => ({\r\n        type: BOARDS_TYPES.BOARDS_EDIT_SUCCESS,\r\n        payload: board\r\n    })\r\n\r\n    const updateBoardError = (errors) => ({\r\n        type: BOARDS_TYPES.BOARDS_EDIT_ERROR,\r\n        payload: errors,\r\n    })\r\n\r\n    dispatch(updateBoardStart())\r\n\r\n    boardsServices.updateBoard(id, updateBoardDto)\r\n        .then(json => {\r\n            dispatch(updateBoardSuccess(json))\r\n        })\r\n        .catch(errors => {\r\n            dispatch(updateBoardError(errors))\r\n        })   \r\n}\r\n\r\n\r\nconst deleteBaord = (id) => dispatch => {\r\n\r\n    const deleteBoardStart = () => ({\r\n        type: BOARDS_TYPES.BOARDS_DELETE_START\r\n    })\r\n\r\n    const deleteBoardSuccess = (id) => ({\r\n        type: BOARDS_TYPES.BOARDS_DELETE_SUCCESS,\r\n        payload: id\r\n    })\r\n\r\n    const deleteBoardError = (errors) => ({\r\n        type: BOARDS_TYPES.BOARDS_DELETE_ERROR,\r\n        payload: errors,\r\n    })\r\n\r\n    dispatch(deleteBoardStart())\r\n\r\n    boardsServices.deleteBoard(id)\r\n        .then(json => {\r\n            dispatch(deleteBoardSuccess(id))\r\n            history.push({\r\n                pathname: \"/boards\"\r\n            })\r\n        })\r\n        .catch(errors => {\r\n            const parsedErrors = parseError(errors)\r\n            dispatch(deleteBoardError(parsedErrors))\r\n        })   \r\n}\r\n\r\n\r\nconst boardActions = {\r\n    fetchAllBoards,\r\n    fetchOneBoard,\r\n    createBoard,\r\n    updateBoard,\r\n    deleteBaord\r\n}\r\n\r\nexport default boardActions","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport boardActions from '../redux/boards/boards.actions'\r\nimport {useParsedFieldErrors} from \"../hooks/useParsedFieldError.hook\"\r\n\r\nimport FlexOverlay from './FlexOverlay.component'\r\nimport FormInput from './FormInput.component'\r\nimport FormMessageDisplay from './FormMessageDisplay.component'\r\nimport PrimaryButton from './PrimaryButton.component'\r\n\r\n\r\nconst BoardCreateOverlay = ({showOverlay, setShowOverlay}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isCreateBoardPending = useSelector(store => store.boards.create.createBoardPending)\r\n    const createBoardError = useSelector(store => store.boards.create.createBoardError)\r\n    const parsedFieldErrors = useParsedFieldErrors(createBoardError)\r\n\r\n    const [boardTitle, setBoardTitle] = useState(\"\")\r\n    const [statusMessage, setStatusMessage] = useState({\r\n        message: \"\",\r\n        type: \"error\"\r\n    })\r\n\r\n\r\n    // create board\r\n    const onCreateClick = (e) => {\r\n        e.preventDefault();\r\n        const createBoardDto = {\r\n            title: boardTitle\r\n        }\r\n        dispatch(boardActions.createBoard(createBoardDto))\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setBoardTitle(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <FlexOverlay setShow={setShowOverlay} show={showOverlay} title=\"Create New Board\">\r\n            <form>\r\n                <FormMessageDisplay message={statusMessage.message} type={statusMessage.type} />\r\n                <FormInput label=\"title\" id=\"board-title\" name=\"title\" value={boardTitle} onChange={onChange} errorMessage={parsedFieldErrors.title}/>      \r\n                <PrimaryButton onClick={onCreateClick} isLoading={isCreateBoardPending}>Create Board</PrimaryButton>\r\n            </form>\r\n        </FlexOverlay>\r\n    )\r\n}\r\n\r\nexport default BoardCreateOverlay","import React from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {FaEdit, } from \"react-icons/fa\"\r\nimport \"../styles/components/BoardPreview.scss\"\r\n\r\nconst BoardPreview = ({board}) => {\r\n    return (\r\n        <div className=\"board-preview\" >\r\n\r\n            <div className=\"board-preview__feature-img\" style={{backgroundImage: `url('/board.png')` }}></div>\r\n\r\n            <div className=\"board-preview__title\">\r\n                {board.title}\r\n            </div>\r\n\r\n            <div className=\"board-preview__buttons\">\r\n                <Link to={`/boards/${board.id}/edit`} className=\"board-preview__btn board-preview__edit-btn\"><FaEdit /> Edit</Link>\r\n                <Link to={`/boards/${board.id}`} className=\"board-preview__btn board-preview__play-btn\"><FaEdit /> Play</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardPreview\r\n","import React from 'react'\r\nimport BoardPreview from './BoardPreview.component'\r\nimport FormMessageDisplay from './FormMessageDisplay.component'\r\n\r\nimport \"../styles/components/BoardsList.scss\"\r\n\r\nconst BoardsList = React.memo(({boards, emptyMessage}) => (\r\n    <div className=\"boards-list\">\r\n        <div className=\"boards-list__items\">\r\n            {boards && boards.map(board => (\r\n                <BoardPreview id={board.id} board={board} key={board.id}/>\r\n            ))}\r\n        </div>\r\n        \r\n        {boards.length === 0 && <FormMessageDisplay message={emptyMessage} type=\"info\"/>}\r\n    </div>\r\n))\r\n\r\n\r\nBoardsList.defaultProps = {\r\n    emptyMessage: \"There aren't currently any boards. Create One.\",\r\n    boards: [],\r\n}\r\n\r\nexport default BoardsList\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FaPlus} from \"react-icons/fa\"\r\n\r\nimport boardsActions from \"../redux/boards/boards.actions\"\r\n\r\nimport BoardCreateOverlay from '../components/BoardCreateOverlay.component';\r\nimport BoardsList from '../components/BoardsList.component'\r\nimport Header from '../components/Header.component'\r\nimport FormInput from '../components/FormInput.component';\r\nimport PageTitleSection from \"../components/PageTitleSection.component\"\r\n\r\n\r\nconst BoardsOverviewPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    // selectors\r\n    const boardsByID = useSelector(store => store.boards.boards.byId)\r\n    const boardsList = useSelector(store => store.boards.boards.list)\r\n    const fetchBoardsPending = useSelector(store => store.boards.boards.fetchAllPending)\r\n    const fetchBoardsError = useSelector(store => store.boards.boards.fetchAllError)\r\n\r\n    // state variables\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [showBoardCreate, setShowBoardCreate] = useState(false)\r\n    const [boards,setBoards] = useState([])\r\n\r\n\r\n    // fetch user's boards on load\r\n    useEffect(() =>{\r\n        dispatch(boardsActions.fetchAllBoards())\r\n    },[dispatch])\r\n\r\n    // read boards after they have loaded / updated\r\n    useEffect(() => {\r\n        setBoards(boardsList.map(boardId => boardsByID[boardId]))\r\n    }, [boardsByID, boardsList])\r\n\r\n    // update search state & update displayed boards based on search term\r\n    const onSearch = (e) => {\r\n        setSearchTerm(e.target.value)\r\n\r\n        const searchedBoards = boardsList.map(boardId => {\r\n            const board = boardsByID[boardId]\r\n            return board.title.toLowerCase().includes(e.target.value) ? board : null;\r\n        }).filter((board) => board !== null)\r\n        setBoards(searchedBoards)\r\n    }\r\n\r\n    const onCreateClick = () => {\r\n        setShowBoardCreate(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"page page--fullscreen page--flex\" >\r\n        <Header />\r\n    \r\n        <div className=\"page__content page__content--container\">\r\n\r\n            <PageTitleSection title=\"Boards\">\r\n                <div className=\"people-overview-header__controlls\">\r\n                    <div className=\"people-overview-header__input\"><FormInput label=\"search\" value={searchTerm} onChange={onSearch}/></div>\r\n                    <div className=\"people-overview-header__button\"> <button className=\"button button--action\" onClick={onCreateClick}><FaPlus />New Board</button></div>\r\n                </div>\r\n            </PageTitleSection>\r\n  \r\n            <div className=\"page-section\">\r\n                <BoardsList boards={boards} isLoading={fetchBoardsPending} error={fetchBoardsError} />\r\n            </div>\r\n   \r\n        </div>\r\n        <BoardCreateOverlay showOverlay={showBoardCreate} setShowOverlay={setShowBoardCreate}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default BoardsOverviewPage","import React, {useEffect, useState, useMemo} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport peopleActions from \"../redux/people/people.actions\"\r\n\r\nimport FlexOverlay from './FlexOverlay.component'\r\nimport FormInput from \"./FormInput.component\"\r\nimport PeopleList, {DISPLAY_TYPES} from \"./PeopleList.component\"\r\nimport PrimaryButton from \"./PrimaryButton.component\"\r\n\r\nimport \"../styles/components/BoardEditAddPeopleOverlay.styles.scss\"\r\n\r\nconst BoardEditAddPeopleOverlay = ({setShow, show, addPeople}) => {\r\n    const dispatch = useDispatch()\r\n    const [searchTerm, setSerachTerm] = useState(\"\")\r\n    const [peopleDisplayList, setPeopleDisplayList] = useState([])\r\n    const [selectedPeople, setSelectedPeople] = useState([])\r\n\r\n    const peopleById = useSelector(store => store.people.people.peopleByID)\r\n    const peopleList = useSelector(store => store.people.people.peopleList)\r\n\r\n    const allPeople = useMemo(() => {\r\n            return peopleList.map(personId => peopleById[personId]);\r\n        },\r\n        [peopleList, peopleById],\r\n    )\r\n\r\n\r\n    // fetch users people on load\r\n    useEffect(() => {\r\n        dispatch(peopleActions.fetchAllPeople())\r\n    },[dispatch])\r\n\r\n    useEffect(() => { \r\n        setPeopleDisplayList(allPeople)\r\n    },[allPeople])\r\n\r\n\r\n    const onPersonClick = (person) => {\r\n        const newSelectedPeople = selectedPeople.includes(person.id) ?\r\n            selectedPeople.filter(id => id !== person.id) :\r\n            [...selectedPeople, person.id]\r\n\r\n        setSelectedPeople(newSelectedPeople)\r\n    }\r\n\r\n    const onAddPeopleClick = () => {\r\n        // update board with people\r\n        const selectedPeopleArray = selectedPeople.map(peopleId => {\r\n            return peopleById[peopleId]\r\n        })\r\n       \r\n        addPeople(selectedPeopleArray)\r\n\r\n        // remove selected people\r\n        setSelectedPeople([])\r\n        setSerachTerm(\"\")\r\n        setPeopleDisplayList(allPeople)\r\n        setShow(false)\r\n    }\r\n\r\n    const onSearch = (e) => {\r\n        setSerachTerm(e.target.value)\r\n        const searchTerm = e.target.value;\r\n\r\n        const searchResults = allPeople.filter(person => {\r\n            return person.name.includes(searchTerm)\r\n        })\r\n        setPeopleDisplayList(searchResults)\r\n    }\r\n    \r\n\r\n    return (\r\n        <FlexOverlay setShow={setShow} show={show} title=\"Add People\">\r\n            <h3 className=\"board-add-people__subtitle\">Add new Peopel to your board</h3>\r\n            <p className=\"board-add-people__count-info\"> You have currently selected {selectedPeople.length} People</p>\r\n  \r\n            <FormInput label=\"Search\" id=\"search-person\" value={searchTerm} onChange={onSearch}/>\r\n            <PeopleList items={peopleDisplayList} sortable={false} onClick={onPersonClick} selected={selectedPeople} displayType={DISPLAY_TYPES.AUTO_FIT}/>\r\n            <PrimaryButton onClick={onAddPeopleClick}>Add People</PrimaryButton>\r\n        </FlexOverlay>\r\n    )\r\n}\r\n\r\nexport default BoardEditAddPeopleOverlay","import React from 'react'\r\nimport {FaCheck, FaTimes} from \"react-icons/fa\"\r\nimport \"../styles/components/ToggleCheckbox.styles.scss\"\r\n\r\nconst ToggleCheckbox = React.memo(({onChange, value}) => (\r\n    <label className={`checkbox ${value ? 'checkbox--checked' : ''}`}>\r\n        <input className=\"checkbox__input\" type=\"checkbox\" onChange={onChange} checked={value}/>\r\n        <div className=\"checkbox__inner\">\r\n            <FaCheck className=\"checkbox__check\"/>\r\n            <FaTimes className=\"checkbox__times\"/>\r\n            <div className=\"checkbox__circle\"></div>\r\n        </div>\r\n    </label>\r\n))\r\n\r\n\r\nexport default ToggleCheckbox;","import React, {useState} from 'react'\r\nimport {FaShareAlt} from \"react-icons/fa\"\r\nimport {useDispatch} from \"react-redux\"\r\n\r\nimport boardActions from \"../redux/boards/boards.actions\"\r\n\r\nimport FlexOverlay from './FlexOverlay.component'\r\nimport ToggleCheckbox from \"./ToggleCheckbox.component\"\r\nimport FormMessageDisplay from './FormMessageDisplay.component'\r\n\r\nimport \"../styles/components/BoardEditShare.styles.scss\"\r\n\r\n\r\nconst BoardEditShare = ({className, board}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [showShareBoard, setShowShareBoard] = useState(false)\r\n    const [share, setShare] =  useState(board ? board.sharing_enabled : false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    const link = board ? `${window.location.hostname}/boards/${board.id}` : ''\r\n    \r\n\r\n    const toggleShowBoard = () => setShowShareBoard(!showShareBoard)\r\n\r\n    const copyLinkToClipBoard = () => {\r\n        navigator.clipboard.writeText(link).then(function() {\r\n            setMessage('Copying to clipboard was successful!')\r\n            hideMessage()\r\n        }, function(err) {\r\n            setMessage('Could not copy text: ');\r\n            hideMessage()\r\n        });\r\n    }\r\n\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setMessage('')\r\n        }, 2000)\r\n    }\r\n\r\n \r\n    // updates 'public/private' status of board\r\n    const onShareChange = (e) => {\r\n        setShare(e.target.checked)\r\n     \r\n        if(board){\r\n            const updateBoardDto = {\r\n                title: board.title,\r\n                people: board.people.map(person => person.person.id),\r\n                sharing_enabled: e.target.checked\r\n            }\r\n\r\n            dispatch(boardActions.updateBoard(board.id, updateBoardDto))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={`board-share ${showShareBoard ? 'board-share--show' : ''}`}>\r\n            <div className={className} onClick={toggleShowBoard}>\r\n                <FaShareAlt />\r\n            </div>\r\n            <FlexOverlay setShow={setShowShareBoard} title=\"Share Board\" show={showShareBoard} >\r\n                <div className=\"board-share__container\">\r\n                    \r\n                   \r\n\r\n                    <div className=\"board-share__public-container\">\r\n                        <ToggleCheckbox onChange={onShareChange} value={share}/>\r\n                        <label>Share Board public</label>\r\n                    </div>\r\n               \r\n                  \r\n                    <div className=\"board-share__input-container\">\r\n                        <input className=\"board-share__input\" type=\"text\" value={link} name=\"share-link\" readOnly={true}/>\r\n                        <button  className=\"board-share__copy-btn\" onClick={copyLinkToClipBoard}>Copy Link</button>\r\n                    </div>\r\n                    <FormMessageDisplay message={message} type=\"info\" />\r\n                </div>\r\n            </FlexOverlay>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardEditShare","import React from 'react'\r\nimport LoadingIndicator from './LoadingIndicator'\r\nimport \"../styles/components/LoadingOverlay.styles.scss\"\r\n\r\nconst LoadingOverlay = ({isLoading}) => {\r\n    return (\r\n        <div className={`loading-overlay ${isLoading ? 'loading-overlay--show' : ''}`}>\r\n            <LoadingIndicator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingOverlay;","import React from 'react'\r\nimport {FaQuestionCircle} from \"react-icons/fa\"\r\nimport \"../styles/components/NotFoundNotice.styles.scss\"\r\n\r\nconst NotFoundNotice = ({title, message}) => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <div className=\"not-found__container\">\r\n\r\n                <FaQuestionCircle />\r\n                <h1 className=\"not-found__title\">{title}</h1>\r\n                <p  className=\"not-found__message\">{message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nNotFoundNotice.defaultProps = {\r\n    title: \"Not Found\",\r\n    message: \"\"\r\n}\r\n\r\nexport default NotFoundNotice;","import React from 'react'\r\nimport {FaTrash} from \"react-icons/fa\"\r\nimport PeopleCard from './PeopleCard.component'\r\n\r\nconst PeopleOverviewCard = ({person, onRemoveClick, ...props}) => {\r\n    const onDeleteClick = (e) => {\r\n        onRemoveClick(person)\r\n    }\r\n\r\n    return (\r\n        <PeopleCard {...props} person={person}>\r\n            <div className=\"people-card__overlay-edit\">\r\n       \r\n\r\n                <div className=\"expanding-btn\" title=\"remove\" onClick={onDeleteClick}>\r\n                    <div className=\"expanding-btn__text\">\r\n                        Remove\r\n                    </div>\r\n                    <div className=\"expanding-btn__icon\">\r\n                        <FaTrash />  \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div className=\"people-card__edit-drag\">Drag to order</div>\r\n            </div>\r\n        </PeopleCard>\r\n    )\r\n}\r\n\r\nexport default PeopleOverviewCard","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport {FaPlus, FaTrash, FaArrowLeft} from \"react-icons/fa\"\r\n\r\nimport boardActions from \"../redux/boards/boards.actions\"\r\n\r\nimport Header from '../components/Header.component'\r\nimport BoardEditAddPeopleOverlay from '../components/BoardEditAddPeopleOverlay.component'\r\nimport BoardEditShare from '../components/BoardEditShare.component'\r\nimport FormInput from '../components/FormInput.component'\r\nimport FormMessageDisplay from '../components/FormMessageDisplay.component'\r\nimport LoadingOverlay from '../components/LoadingOverlay.component'\r\nimport NotFoundNotice from '../components/NotFoundNotice.component'\r\nimport PeopleList from '../components/PeopleList.component'\r\nimport PageTitleSection from '../components/PageTitleSection.component'\r\nimport PrimaryButton from \"../components/PrimaryButton.component\"\r\nimport PeopleCardEdit from '../components/PeopleCardEdit.component'\r\n\r\nimport \"../styles/pages/BoardEditPage.styles.scss\"\r\n\r\nconst BaordEditPage = () => {\r\n    const {boardId} = useParams() \r\n    const dispatch = useDispatch()\r\n  \r\n    // selectors\r\n    const boards = useSelector(store => store.boards.boards.byId)\r\n    const isEditPending = useSelector(store => store.boards.edit.editBoardPending)\r\n    const fetchOnePending = useSelector(store => store.boards.boards.fetchOnePending)\r\n\r\n    // state vars\r\n    const [showOverlay, setShowOverlay] = useState(false)\r\n    const [title, setTitle] = useState(\"Loading...\")\r\n    const [displayPeople, setDisplayPeople] = useState([])\r\n    const board = boards[boardId]\r\n\r\n    // fetch board on load\r\n    useEffect(() => {\r\n        dispatch(boardActions.fetchOneBoard(boardId))\r\n    }, [dispatch, boardId])\r\n\r\n    // fill in data after board has loaded\r\n    useEffect(() => {\r\n        if(board){\r\n            setTitle(board.title)\r\n            const boardPeople = board.people ? board.people.reduce((arr, boardPerson) => {\r\n                if(boardPerson.person) return [...arr, boardPerson.person]\r\n                return arr\r\n            },[]) : [];\r\n            setDisplayPeople(boardPeople)\r\n        }\r\n    },[board])\r\n\r\n\r\n\r\n    // open add people overlay on button click\r\n    const onAddPersonClick = () => {\r\n        setShowOverlay(true)\r\n    }\r\n\r\n    // onChange handler for title\r\n    const onTitleChange = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    // add people to board (local only)\r\n    const addPeople = (people) => {\r\n        let peopleToAdd = []\r\n\r\n        \r\n        for(let i = 0; i < people.length; i++){\r\n            // prevent duplicate addition of people\r\n            let exists = false;\r\n            displayPeople.forEach(displayPerson => {\r\n                if(displayPerson.id === people[i].id){\r\n                    exists = true;\r\n                }\r\n            })\r\n\r\n            // add people\r\n            if(!exists){\r\n                peopleToAdd.push(people[i])\r\n            }else{\r\n                console.log(people[i].id + \" already exists\")\r\n            }\r\n        }\r\n\r\n        setDisplayPeople([...displayPeople, ...peopleToAdd])\r\n    }\r\n\r\n    const reorderArray = (array, fromIndex, toIndex) => {\r\n        array = [...array];\r\n        const startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex;\r\n\r\n        if (startIndex >= 0 && startIndex < array.length) {\r\n            const endIndex = toIndex < 0 ? array.length + toIndex : toIndex;\r\n\r\n            const [item] = array.splice(fromIndex, 1);\r\n            array.splice(endIndex, 0, item);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    // save all changes\r\n    const onSave = (e) => {\r\n        e.preventDefault();\r\n        // combine titlte and personlist to transfer object \r\n        if(board){\r\n            const updateBoardDto = {\r\n                title: title,\r\n                people: displayPeople.map(displayPerson => displayPerson.id)\r\n            }\r\n            dispatch(boardActions.updateBoard(board.id, updateBoardDto))\r\n        }\r\n    }\r\n\r\n    // deletes board\r\n    const onDeleteBoardClick = () => {\r\n        dispatch(boardActions.deleteBaord(boardId))\r\n    }\r\n\r\n    // removes card from board (local only until save)\r\n    const onRemoveCard = (removePerson) => {\r\n        const newDisplayPeople = displayPeople.filter(person => person.id !== removePerson.id)\r\n        setDisplayPeople(newDisplayPeople)\r\n    }\r\n\r\n\r\n    const onSortEnd = ({oldIndex, newIndex}) => {\r\n        const newOrderedArray = reorderArray(displayPeople, oldIndex, newIndex)\r\n        setDisplayPeople(newOrderedArray)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"page page--fullscreen page--flex\" >\r\n            <Header />\r\n        \r\n\r\n            {!fetchOnePending && !board ? \r\n                <div className=\"page__content page__content--container\">\r\n                        <NotFoundNotice title=\"No Board Found\" message={`can't find board with id '${boardId}'`}/>\r\n                </div>\r\n            :\r\n            (          \r\n                <React.Fragment>\r\n                    <div className=\"page__content page__content--container\">\r\n                        <LoadingOverlay isLoading={fetchOnePending} />\r\n\r\n                        <PageTitleSection title={\"Edit 'Placeholder'\"}>\r\n\r\n                            <div className=\"board-edit-controlls\">\r\n                                <BoardEditShare className=\"share-board-icon\" board={board}/>\r\n                                <Link className=\"back-to-boards-overview-link\" to=\"/boards\" title=\"Back To Boards Overview\"><FaArrowLeft /></Link>\r\n                            </div>\r\n                            \r\n                       \r\n                            <div className=\"edit-board-title-container\">\r\n                                <div className=\"people-overview-header__input\">\r\n                                    <FormInput \r\n                                        label=\"title\"\r\n                                        value={title}\r\n                                        onChange={onTitleChange}\r\n                                        />\r\n                                </div>\r\n                                <div className=\"people-overview-header__button\"> <button className=\"button button--mid button--action\"  onClick={onAddPersonClick}><FaPlus />Add People</button></div>\r\n                                <div className=\"people-overview-header__button\"> <button className=\"button button--mid button--danger\" onClick={onDeleteBoardClick}><FaTrash />Delete Board</button></div>\r\n                            </div>\r\n                          \r\n                        </PageTitleSection>\r\n            \r\n                \r\n                        <div className=\"page-section edit-board-body\">\r\n                            <div className=\"edit-board-body__save\">\r\n                                \r\n                                <PrimaryButton onClick={onSave} isLoading={isEditPending}>Save</PrimaryButton>\r\n                                <FormMessageDisplay message=\"\" type=\"error\"/>\r\n                            </div>\r\n                            <PeopleList \r\n                                id=\"board-edit-people\"\r\n                                items={displayPeople} \r\n                                sortable={true}\r\n                                onSortEnd={onSortEnd}\r\n                                axis=\"xy\" \r\n                                card={({person, ...props}) => \r\n                                    <PeopleCardEdit person={person} {...props} onRemoveClick={() => onRemoveCard(person)}/>\r\n                                }\r\n                                />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <BoardEditAddPeopleOverlay title=\"Edit board\" show={showOverlay} setShow={setShowOverlay} addPeople={addPeople}/>\r\n                </React.Fragment>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BaordEditPage","import React, {useState, useEffect, useRef} from 'react'\r\nimport {API_BASE_URL} from \"../utils/urls.utils\"\r\n\r\nimport \"../styles/components/BoardDisplay.scss\"\r\n\r\nconst createEmptyBoard = (num) => {\r\n    return [...new Array(num)].map(_ => ({\r\n        open: true,\r\n        person: null,\r\n    }));\r\n}\r\n\r\nconst BoardDisplay = ({people}) => {\r\n    const [board, setBoard] = useState(createEmptyBoard(24))\r\n\r\n    useEffect(() => {\r\n        // insert people into board\r\n\r\n        let newBoard = []\r\n        for(let i = 0; i < board.length; i++){\r\n            const boardCard = board[i]\r\n            if(people && people[board.length-i-1]){\r\n                newBoard.push({\r\n                    ...boardCard,\r\n                    person: people[board.length-i-1] \r\n                })\r\n            }else{\r\n                newBoard.push(boardCard)\r\n            }\r\n            \r\n        }\r\n\r\n        setBoard(newBoard)\r\n    }, [people])\r\n\r\n\r\n    const onCardClick = (cardIndex) => {\r\n        const newBoard = [...board]\r\n        newBoard[cardIndex].open = !newBoard[cardIndex].open;\r\n        setBoard(newBoard)\r\n    }\r\n\r\n    const openAll = () => {\r\n\r\n        const newBoard = board.map(boardCard => {boardCard.open = true; return boardCard})\r\n        setBoard(newBoard)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"board-display__container\">\r\n            <div className=\"board-display\">\r\n                {board.map((boardCard, i) => {\r\n\r\n\r\n                    return (\r\n                    <BoardDisplayCard card={boardCard} key={`board-display-card-${i}`} pos={i} onCardClick={onCardClick}/>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <button className=\"board-display-open-all-btn\" onClick={openAll}>Open All</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst BoardDisplayCard = ({card, pos, onCardClick}) => {\r\n\r\n    const cardRef = useRef()\r\n    const [height, setHeight] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        const width = cardRef.current.offsetWidth\r\n        setHeight(width * 4 / 3);\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"board-display__card-socket\" ref={cardRef} style={{height: height}}>\r\n        <div className={`board-display__card ${card.open && 'board-display__card--open'}`} onClick={() => onCardClick(pos)}>\r\n            <div className=\"board-display__card-back\"></div>\r\n            <div className=\"board-display__card-front\">\r\n                \r\n\r\n               \r\n                <div className=\"board-display__card-container\">\r\n                    <div \r\n                        className=\"board-display__card-img-container\" \r\n                        style={card.person ? \r\n                            {backgroundImage: `url('${API_BASE_URL + card.person.image_url}')`} : \r\n                            {backgroundImage: `url('${API_BASE_URL + 'uploads/card-unplaced.png'}')`}}>          \r\n                        </div>\r\n                    <div title={card.person ? card.person.name : \"Unplaced\"} className=\"board-display__card-title\">{card.person ? card.person.name : \"Unplaced\"}</div>\r\n                </div>\r\n                 \r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default BoardDisplay","import React, {useEffect, useState} from 'react'\r\nimport {useParams} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport BoardDisplay from '../components/BoardDisplay.component'\r\nimport Header from '../components/Header.component'\r\nimport boardsActions from '../redux/boards/boards.actions'\r\nimport LoadingOverlay from \"../components/LoadingOverlay.component\"\r\nimport NotFoundNotice from \"../components/NotFoundNotice.component\"\r\n\r\nconst PlayBoard = () => {\r\n    const { boardId } = useParams()\r\n    const dispatch = useDispatch()\r\n    const board = useSelector(store => store.boards.boards.byId[boardId])\r\n    const fetchBoardPending = useSelector(store => store.boards.boards.fetchOnePending)\r\n    \r\n    const [people, setPeople] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        let people = [];\r\n        if(board){\r\n            people = board.people.map(boardPerson => boardPerson.person)     \r\n        }\r\n        setPeople(people)\r\n    },[board])\r\n    \r\n    useEffect(() => {\r\n        // fetch board\r\n        dispatch(boardsActions.fetchOneBoard(boardId))\r\n    }, [dispatch, boardId])\r\n\r\n\r\n    return (\r\n        <div className=\"page page--fullscreen page--flex\" >\r\n            <Header />\r\n        \r\n            <div className=\"page__content page__content--container\">\r\n\r\n                {!fetchBoardPending && !board ? \r\n                <NotFoundNotice title=\"Board Not Found\" message={`No board with id '${boardId} found.'`}/>\r\n                :\r\n                <React.Fragment>\r\n                    <LoadingOverlay isLoading={fetchBoardPending} />\r\n                    <BoardDisplay people={people}/> \r\n                </React.Fragment>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayBoard","import { Redirect, Route } from \"react-router-dom\"\r\nimport { isExpired, parseJwt} from \"../utils/jwt.utils\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport userActions from \"../redux/user/user.actions\"\r\n\r\n\r\n\r\nconst useIsLoggedIn = (redirectUrl) => {\r\n    const dispatch = useDispatch();\r\n    const auth =  useSelector(store => store.user.auth_token)\r\n    const isTokenExpired = isExpired(parseJwt(auth))\r\n\r\n\r\n\r\n    if(auth && isTokenExpired){\r\n        // logout \r\n        dispatch(userActions.logout())\r\n    }\r\n\r\n    // return is LoggedIN\r\n    return auth && !isTokenExpired;\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, ...props}) => {\r\n    const isLoggedIn = useIsLoggedIn();\r\n\r\n    return (\r\n        <Route \r\n            {...props}\r\n            render={props => \r\n                isLoggedIn ? \r\n                    <Component {...props} />\r\n                :\r\n                <Redirect to={{\r\n                    pathname: \"/login\",\r\n                    state: {referrer: props.location}\r\n                }} />\r\n            } \r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React from \"react\";\nimport {Switch, Route, Router} from \"react-router-dom\"\n\nimport history from \"./utils/history.utils\"\nimport {API_BASE_URL} from \"./utils/urls.utils\"\nimport HomepagePage from \"./pages/Homepage.page\";\nimport LoginPage from \"./pages/Login.page\";\nimport RegisterPage from \"./pages/Register.page\";\nimport PeopleOverview from \"./pages/PeopleOverview.page\";\nimport BoardsOverviewPage from \"./pages/BoardsOverview.page\";\nimport BaordEditPage from \"./pages/BoardEditPage.page\";\nimport PlayBoard from \"./pages/PlayBoard.page\";\nimport PrivateRoute from \"./redux/PrivateRoute\"\n\nimport \"./styles/main.scss\";\n\nconsole.log(API_BASE_URL)\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history} >\n        <Switch>\n          \n          <Route path=\"/register\" component={RegisterPage}/>\n          <Route path=\"/login\" component={LoginPage}/>\n          <PrivateRoute path=\"/people\" component={PeopleOverview}/>\n\n          <PrivateRoute path=\"/boards/:boardId/edit\" component={BaordEditPage} />\n          <PrivateRoute path=\"/boards/:boardId\" component={PlayBoard} />\n          <PrivateRoute path=\"/boards\" component={BoardsOverviewPage} />\n        \n          <Route path=\"/\" component={HomepagePage}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import USER_TYPES from \"./user.types\"\r\nimport {getAuthToken, parseJwt, isExpired, removeAuthToken} from \"../../utils/jwt.utils\"\r\n\r\n\r\n\r\n  const token = getAuthToken();\r\n  \r\n\r\n  let initalUserState = {\r\n      user: null,\r\n      auth_token: null,\r\n  }\r\n\r\n  if(token){\r\n\r\n    const parsedToken = parseJwt(token);\r\n    const expired = isExpired(parsedToken)\r\n   \r\n\r\n    if(expired){\r\n        removeAuthToken()\r\n    }else{\r\n        initalUserState = {\r\n            user: parsedToken.user,\r\n            auth_token: token,\r\n        }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\nconst initalState = {\r\n    user: null,\r\n    auth_token: null,\r\n    userLoginPending: false,\r\n    userLoginError: null,\r\n    ...initalUserState,\r\n    \r\n\r\n\r\n    registeredUser: null,\r\n    registerUserPending: false,\r\n    registerUserError: null,\r\n}\r\n\r\nconst userReducer = (state = initalState, action) => {\r\n    switch(action.type){\r\n        case USER_TYPES.REGISTER_USER_SUCCESS:\r\n            return {...state, registeredUser: action.payload, registerUserPending: false, registerUserError: null}\r\n        case USER_TYPES.REGISTER_USER_PENDING:\r\n            return {...state, registeredUser: action.payload, registerUserPending: true}\r\n        case USER_TYPES.REGISTER_USER_ERROR:\r\n            return {...state, registeredUser: null, registerUserPending: false, registerUserError: action.payload}\r\n\r\n\r\n        case USER_TYPES.LOGIN_USER_PENDING:\r\n            return {...state, userLoginPending: true}\r\n        case USER_TYPES.LOGIN_USER_SUCCESS:\r\n            return {...state, userLoginPending: false, user: action.payload.user, auth_token: action.payload.token, userLoginError: null}\r\n        case USER_TYPES.LOGIN_USER_ERROR:\r\n            return {...state, userLoginPending: false, userLoginError: action.payload}\r\n\r\n        case USER_TYPES.LOGOUT_USER:\r\n            return {...state, user: null, auth_token: null}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import PEOPLE_TYPES from \"../people.types\"\r\n\r\nconst initialState = {\r\n    id: null,\r\n    name: null,\r\n    image_url: null,\r\n    owner: null,\r\n    deletePending: false,\r\n    deleteError: null,\r\n    updateError: null,\r\n    updatePending: false,\r\n}\r\n\r\n\r\n\r\nconst personReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case PEOPLE_TYPES.PEOPLE_DELETE_START:\r\n            return {...state, deletePending: true}\r\n        case PEOPLE_TYPES.PEOPLE_DELETE_ERROR:\r\n            return {...state, deletePending: false, deleteError: action.payload.error}\r\n        case PEOPLE_TYPES.PEOPLE_UPDATE_START:\r\n            return {...state, updatePending: true}\r\n        case PEOPLE_TYPES.PEOPLE_UPDATE_SUCCESS:\r\n            return {...state, ...action.payload, updatePending: false}\r\n        case PEOPLE_TYPES.PEOPLE_UPDATE_ERROR:\r\n            return {...state, updatePending: false, updateError: action.payload.error}\r\n      \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default personReducer","import PEOPLE_TYPES from \"../people.types\"\r\nimport personReducer from \"./person.reducer\"\r\n\r\nconst initialState = {\r\n    fetchPersonPending: false,\r\n    fetchPersonError: null,\r\n    fetchAllPeoplePending: false,\r\n    fetchAllPeopleError: null,\r\n    peopleByID: {},\r\n    peopleList: []\r\n}\r\n\r\n\r\nconst peopleReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case PEOPLE_TYPES.PEOPLE_CREATE_SUCCESS:\r\n            return {\r\n                ...state, \r\n                peopleList: [...state.peopleList, action.payload.id],\r\n                peopleByID: {\r\n                    ...state.peopleByID,\r\n                    [action.payload.id]: action.payload\r\n                }\r\n            }\r\n\r\n        case PEOPLE_TYPES.PEOPLE_FETCH_ALL_START:\r\n            return {...state, fetchAllPeoplePending: true}\r\n        case PEOPLE_TYPES.PEOPLE_FETCH_ALL_SUCCESS:\r\n            return {\r\n                ...state, \r\n                fetchAllPeoplePending: false, \r\n                peopleByID: action.payload.reduce((res, next) => ({...res, [next.id]: next}) ,{}), \r\n                peopleList: action.payload.map(person => person.id)\r\n            }\r\n        case PEOPLE_TYPES.PEOPLE_FETCH_ALL_ERROR:\r\n            return {...state, fetchAllPeoplePending: false, fetchAllPeopleError: action.payload}\r\n\r\n\r\n        case PEOPLE_TYPES.PEOPLE_DELETE_SUCCESS:\r\n            return {\r\n                ...state, \r\n                peopleList: state.peopleList.filter(id => id !== action.payload.id),\r\n                \r\n            }\r\n\r\n        case PEOPLE_TYPES.PEOPLE_DELETE_START:\r\n            return {...state, peopleByID: {\r\n                ...state.peopleByID,\r\n                [action.payload.id]: personReducer(state.peopleByID[action.payload.id],action)\r\n            }}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default peopleReducer","\r\nimport PEOPLE_TYPES from \"../people.types\"\r\n\r\nconst initialState = {\r\n    createdPerson: null,\r\n    createPersonError: null,\r\n    createPersonPending: false,\r\n}\r\n\r\nconst createReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case PEOPLE_TYPES.PEOPLE_CREATE_START:\r\n            return { ...state, createPersonPending: true, createPersonError: null }\r\n        case PEOPLE_TYPES.PEOPLE_CREATE_SUCCESS:\r\n            return {...state, createPersonError: null, createdPerson: action.payload, createPersonPending: false}\r\n        case PEOPLE_TYPES.PEOPLE_CREATE_ERROR:\r\n            return {...state, createPersonError: action.payload, createdPerson: null, createPersonPending: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default createReducer\r\n","import {combineReducers} from \"redux\"\r\nimport peopleReducer from \"./reducers/fetch.reducer\"\r\nimport createPersonReducer from \"./reducers/create.reducer\"\r\n\r\n\r\nexport default combineReducers({\r\n    create: createPersonReducer,\r\n    people: peopleReducer\r\n})","import BOARDS_TYPES from \"../boards.types\"\r\n\r\nconst initialState = {\r\n    fetchAllPending: false,\r\n    fetchAllError: null,\r\n    fetchOnePending: false,\r\n    fetchOneError: null,\r\n    byId: {},\r\n    list: []\r\n}\r\n\r\nconst boardsMainReducer = (state=initialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case BOARDS_TYPES.BOARDS_FETCH_ALL_START:\r\n            return {...state, fetchAllPending: true}\r\n\r\n        case BOARDS_TYPES.BOARDS_FETCH_ALL_SUCCESS:\r\n            return {...state, \r\n                fetchAllPending: false, \r\n                byId: action.payload.reduce((res, board) => ({...res, [board.id]: board }), {}),\r\n                list: action.payload.map(board => board.id)\r\n            }\r\n\r\n    \r\n        case BOARDS_TYPES.BOARDS_FETCH_ALL_ERROR:\r\n            return {...state, fetchAllPending: false, fetchAllError: action.payload}\r\n\r\n        case BOARDS_TYPES.BOARDS_FETCH_ONE_START:\r\n            return {...state, fetchOnePending: true, fetchOneError: null}\r\n\r\n        case BOARDS_TYPES.BOARDS_FETCH_ONE_SUCCESS:\r\n            return {\r\n                    ...state, \r\n                    fetchOnePending: false, \r\n                    fetchOneError: null, \r\n                    byId: {\r\n                        ...state.byId,\r\n                        [action.payload.id]: action.payload\r\n                    }\r\n                }\r\n\r\n        case BOARDS_TYPES.BOARDS_FETCH_ONE_ERROR:\r\n            return {...state, fetchOnePending: false, fetchOneError: action.payload}\r\n\r\n        case BOARDS_TYPES.BOARDS_CREATE_SUCCESS:\r\n            return {\r\n                ...state, \r\n                byId: {...state.byId, [action.payload.id]: action.payload},\r\n                list: [action.payload.id, ...state.list]\r\n            }\r\n\r\n        case BOARDS_TYPES.BOARDS_EDIT_SUCCESS:     \r\n            return {\r\n                ...state, \r\n                byId: {...state.byId, [action.payload.id]: action.payload},\r\n            }   \r\n\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default boardsMainReducer","import BOARDS_TYPES from \"../boards.types\"\r\n\r\n\r\nconst initialState = {\r\n    createBoardPending: false,\r\n    createBoardError: null,\r\n    createdBoard: null    \r\n}\r\n\r\nconst createBoardReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case BOARDS_TYPES.BOARDS_CREATE_START:\r\n            return {...state, createBoardPending: true}\r\n        case BOARDS_TYPES.BOARDS_CREATE_SUCCESS:\r\n            return {...state, createBoardPending: false, createdBoard: action.payload, createBoardError: null }\r\n        case BOARDS_TYPES.BOARDS_CREATE_ERROR:\r\n            return {...state, createBoardPending: false, createBoardError: action.payload}\r\n\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default createBoardReducer\r\n\r\n","import BOARDS_TYPES from \"../boards.types\"\r\n\r\n\r\n\r\nconst initialState = {\r\n    editBoardPending: false,\r\n    editBoardError: null,\r\n    editedBoard: null    \r\n}\r\n\r\nconst updateBoardReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case BOARDS_TYPES.BOARDS_EDIT_START:\r\n            return {...state, editBoardPending: true}\r\n        case BOARDS_TYPES.BOARDS_EDIT_SUCCESS:\r\n            return {...state, editBoardPending: false, editedBoard: action.payload, editBoardError: null }\r\n        case BOARDS_TYPES.BOARDS_EDIT_ERROR:\r\n            return {...state, editBoardPending: false, editBoardError: action.payload}\r\n\r\n    \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default updateBoardReducer\r\n\r\n","\r\nimport {combineReducers} from \"redux\"\r\nimport boardsMainReducer from \"./reducers/boards.main.reducer\"\r\nimport createBoardReducer from \"./reducers/boards.create.reducer\"\r\nimport updateBoardReducer from \"./reducers/boards.edit.reducer\"\r\n\r\nexport default combineReducers({\r\n    boards: boardsMainReducer,\r\n    create: createBoardReducer,\r\n    edit: updateBoardReducer,\r\n})","  \r\nimport { combineReducers } from \"redux\"\r\n\r\nimport user from \"./user/user.reducer\"\r\nimport people from \"./people/people.reducer\"\r\nimport boards from \"./boards/boards.reducer\"\r\n\r\nexport default combineReducers({\r\n    user,\r\n    people,\r\n    boards,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport reducers from './root-reducer'\r\n\r\n\r\n\r\nconst INITIAL_STATE = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n    thunk,\r\n]\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    INITIAL_STATE,\r\n    composedEnhancers\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}